{"version":3,"sources":["assets/alter.png","assets/User_details.png","database/firebaseDb.js","screens/AddUserScreen.jsx","screens/UserScreen.jsx","screens/UserDetailScreen.jsx","App.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","picker_Items","label","value","styles","StyleSheet","create","ImageContainer","alignItems","snackBar","borderWidth","borderColor","backgroundColor","flexDirection","flex","position","height","width","zIndex","shadowColor","shadowRadius","borderRadius","left","top","IconContainer","container_button","marginTop","justifyContent","snack_txt","fontSize","color","textAlign","lineHeight","delete_button_txt","save_button_txt","add_button_txt","add_main_container","marginBottom","buttons_main_container","paddingTop","container","padding","inputtxt","labelTop","picker","borderBottomWidth","borderBottomColor","label_txt","inputGroup","inputGroupTop","preloader","right","bottom","button","buttonInner","AddUserScreen","navigation","useState","isLoading","setIsLoading","pickerItems","setPickerItems","visibility","setVisibility","imageUri","setImageUri","Device","agency","setAgency","brand","setBrand","representative_name","setRepresentative_name","picked","setPicked","pickedValue","setPickedValue","selected_brand_count","set_selected_brand_count","firestoreData","setFirestoreData","showAgencyAdd","setShowAgencyAdd","setAddCount","useEffect","count","i","length","Agency","console","log","View","style","ActivityIndicator","size","firestore","collection","get","then","snapshot","data","forEach","element","push","id","Brand","Representative_name","Image","catch","err","ScrollView","AntDesign","name","Text","Picker","selectedValue","onValueChange","itemValue","itemIndex","map","v","Item","TextInput","placeholder","onChangeText","val","TouchableOpacity","onPress","alert","Entypo","a","async","ImagePicker","mediaTypes","All","allowsEditing","aspect","quality","result","cancelled","uri","ProgressBar","progress","source","alt","dbRef","add","Count","res","setTimeout","error","UserScreen","getCollection","querySnapshot","userArr","key","setState","firestoreRef","state","this","unsubscribe","onSnapshot","container_monsters","props","navigate","heading_txt","Ionicons","marginLeft","headingTop","item","userkey","agency_list_container","agency_txt1","agency_txt2","Component","paddingBottom","paddingLeft","tinyLogo","container_edit_button","edit_txt","agency_name_container","representative_txt","txt_description","brand_txt","agency_txt","fontWeight","halfWidth","topImage","UserDetailScreen","route","loading","img","params","Stack","createStackNavigator","MyStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","title","registerRootComponent","NavigationContainer"],"mappings":"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","file":"static/js/app.fabb7dde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alter.0556bdaa.png\";","module.exports = __webpack_public_path__ + \"static/media/User_details.a9c6e531.png\";","import * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDOorzy_UCYAuxX26WHxlI7EnciyH411Gw\",\r\n  authDomain: \"adtp-a04bd.firebaseapp.com\",\r\n  projectId: \"adtp-a04bd\",\r\n  storageBucket: \"adtp-a04bd.appspot.com\",\r\n  messagingSenderId: \"596482222382\",\r\n  appId: \"1:596482222382:web:cc73922b18932899c772bf\",\r\n  measurementId: \"G-8CPSE0XK0M\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore();\r\n\r\nlet storage = firebase.storage();\r\n\r\nexport {\r\n  firebase as default,\r\n  storage\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  View,\r\n  Button,\r\n  Image,\r\n  Platform\r\n} from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport { ProgressBar, Colors } from 'react-native-paper';\r\n\r\n// Importing the react native drop down picker\r\nimport { Picker } from 'react-native'\r\n\r\n//Importing Device API to check the device type to render different content for android and ios\r\nimport * as Device from 'expo-device';\r\n\r\nimport alt from \"../assets/alter.png\";\r\n\r\n//Importing Image Picker \r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport \"firebase/storage\";\r\n\r\nimport firebase from '../database/firebaseDb';\r\n\r\nlet picker_Items = [\r\n  {\r\n    label: \"Company 1\",\r\n    value: 1\r\n  },\r\n  {\r\n    label: \"Company 2\",\r\n    value: 2\r\n  },\r\n  {\r\n    label: \"Company 3\",\r\n    value: 3\r\n  },\r\n  {\r\n    label: \"Company 4\",\r\n    value: 4\r\n  },\r\n  {\r\n    label: \"Company 5\",\r\n    value: 5\r\n  },\r\n  {\r\n    label: \"Company 6\",\r\n    value: 6\r\n  },\r\n  {\r\n    label: \"Company 7\",\r\n    value: 7\r\n  },\r\n  {\r\n    label: \"Company 8\",\r\n    value: 8\r\n  },\r\n  {\r\n    label: \"Company 9\",\r\n    value: 9\r\n  },\r\n  {\r\n    label: \"Company 10\",\r\n    value: 10\r\n  }\r\n]\r\n\r\nfunction AddUserScreen({ navigation }) {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [pickerItems, setPickerItems] = useState(picker_Items);\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const [imageUri, setImageUri] = useState(null);\r\n\r\n\r\n  const device_name = Device.osName;\r\n\r\n  const [agency, setAgency] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [representative_name, setRepresentative_name] = useState('');\r\n  const [image, setImage] = useState('')\r\n\r\n  const [picked, setPicked] = useState(1);\r\n  const [pickedValue, setPickedValue] = useState('');\r\n\r\n  const [selected_brand_count, set_selected_brand_count] = useState(0);\r\n\r\n  //For storing retrieved data\r\n  const [firestoreData, setFirestoreData] = useState([]);\r\n\r\n  //Show Agency Add\r\n  const [showAgencyAdd, setShowAgencyAdd] = useState(false);\r\n  const [addCount, setAddCount] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    if (pickedValue != '') {\r\n      //For counting the number of times this Company has been choosen its count\r\n      let count = 0;\r\n      for (let i = 0; i < firestoreData.length; i++) {\r\n        if (firestoreData[i].Agency == pickedValue) {\r\n          count = count + 1;\r\n        }\r\n      }\r\n\r\n      //console.log(`The slected agency '${pickedValue}' had appeared \"${count}\" number of times previously`);\r\n      console.log(`The slected agency '${pickedValue}' had appeared \"${count}\" number of times previously`);\r\n      // if (addCount) {\r\n      console.log(\"----------?\" + count)\r\n      set_selected_brand_count(count);\r\n      // setAddCount(false);\r\n      //}\r\n      // setAddCount(false);\r\n      //For counting the number of times this Company has been choosen its count\r\n    }\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    for (let i = 0; i < pickerItems.length; i++) {\r\n      if (pickerItems[i].value == picked) {\r\n        //console.log(\"The Picked item label is ==> \", pickerItems[i].label);\r\n        setPickedValue(pickerItems[i].label);\r\n      }\r\n    }\r\n    // console.log(\"Agency name is : \", agency);\r\n    // console.log(\"Picker Items is ==> \", pickerItems);\r\n\r\n    // console.log(\"Data from firestore equals ==> \", firestoreData);\r\n\r\n    //Retrieving the data from firestore for purpose of counter \r\n    if (true) {\r\n      const db = firebase.firestore();\r\n      db.collection(`agencies`)\r\n        .get()\r\n        .then(snapshot => {\r\n          let data = [];\r\n          snapshot.forEach(element => {\r\n            data.push(Object.assign({\r\n              id: element.id,\r\n              \"Agency\": element.Agency,\r\n              \"Brand\": element.Brand,\r\n              \"Representative_name\": element.Representative_name,\r\n              \"Image\": element.Image,\r\n            }, element.data()))\r\n          })\r\n          // console.log(\"data=> \", data)\r\n\r\n          if (firestoreData.length != data.length) {\r\n            setFirestoreData(data);\r\n            // console.log(\"Updated\")\r\n          }\r\n        }).catch(err => {\r\n          console.log(\"Firebase data error ==> \", err)\r\n        })\r\n    }\r\n    //\r\n\r\n  })\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(\"Result of Image ==> \", result);\r\n\r\n    //For Uploading Images to Cloud Storage\r\n    // Create a root reference\r\n    // var storageRef = firebase.storage().ref();\r\n    // const storageRef = ref(storage, 'some-child');\r\n\r\n    if (!result.cancelled) {\r\n      setImageUri(result.uri);\r\n      // Data URL string\r\n      // const message4 = result.uri;\r\n      // uploadString(storageRef, message4, 'data_url').then((snapshot) => {\r\n      //   console.log('Uploaded a data_url string!',snapshot);\r\n      // });\r\n      // 'file' comes from the Blob or File API\r\n      // storageRef.put(file).then((snapshot) => {\r\n      //   console.log('Uploaded a blob or file!');\r\n      // });\r\n\r\n    }\r\n  };\r\n\r\n  const addAgency = () => {\r\n    if (agency != '') {\r\n      let length = pickerItems.length;\r\n      //console.log(\"Length is \", length, agency);\r\n      // let temp_picker_items = pickerItems;\r\n      // temp_picker_items.push({\r\n      //   label: agency,\r\n      //   value: length\r\n      // })\r\n\r\n      //console.log(\"--===================> \",temp_picker_items)\r\n\r\n      setPickerItems(\r\n        [\r\n          ...pickerItems,\r\n          {\r\n            label: agency,\r\n            value: length + 1\r\n          }\r\n        ]\r\n      );\r\n      setShowAgencyAdd(false);\r\n      alert(\"Agency Added\");\r\n    }\r\n    else {\r\n      alert(\"Please enter an agency name to add it to the list.\");\r\n    }\r\n  }\r\n\r\n  const storeUser = () => {\r\n    if (pickedValue === '' || brand === '' || representative_name === '' || imageUri === '') {\r\n      alert('Fill all the fields!');\r\n    } else {\r\n      setIsLoading(true);\r\n      const dbRef = firebase.firestore().collection('agencies');\r\n      let count = selected_brand_count + 1;\r\n      dbRef.add({\r\n        Agency: pickedValue,\r\n        // Agency: agency,\r\n        Brand: brand,\r\n        Representative_name: representative_name,\r\n        Image: \"imageUri\",\r\n        Count: count\r\n      }).then((res) => {\r\n        // setAgency('');\r\n        setVisibility(true);\r\n        setPickedValue('');\r\n        setBrand('');\r\n        setAgency('');\r\n        setPicked(1);\r\n        setRepresentative_name('');\r\n        set_selected_brand_count(0);\r\n        setIsLoading(false);\r\n        setImageUri('');\r\n        //alert(\"You should now navigate to the listing screen because you've added the item\")\r\n        //props.navigation.navigate('UserScreen')\r\n        //navigate('UserScreen')\r\n        setTimeout(() => { navigation.push('UserScreen'); }, 2000);\r\n        setTimeout(() => { setVisibility(false); }, 4000);\r\n      })\r\n        .catch((err) => {\r\n          console.error(\"Error found: \", err);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n\r\n      {(visibility) ? (\r\n        <View style={styles.snackBar}>\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#ffffff\" />\r\n          </View>\r\n          <Text style={styles.snack_txt}>Agency was added to the list</Text>\r\n        </View>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {/* Choose Agency Container */}\r\n      {(device_name == \"iOS\") ? (\r\n        <View style={styles.inputGroupTop}>\r\n          <Text style={styles.labelTop}>Agency name</Text>\r\n          <Picker\r\n            selectedValue={picked}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue, itemIndex) => {\r\n              setPicked(itemValue)\r\n              setAddCount(true)\r\n            }\r\n            }>\r\n            {pickerItems.map((v, i) => {\r\n              return (\r\n                <Picker.Item key={i} label={v.label} value={v.value} />\r\n              )\r\n            })}\r\n          </Picker>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.inputGroupTop}>\r\n\r\n          <Text style={styles.labelTop}>Agency name</Text>\r\n          <Picker\r\n            selectedValue={picked}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue, itemIndex) => {\r\n              setPicked(itemValue)\r\n              setAddCount(true)\r\n              // console.log(\" ): \", itemIndex)\r\n            }\r\n            }>\r\n            {pickerItems.map((v, i) => {\r\n              return (\r\n                <Picker.Item key={i} label={v.label} value={v.value} />\r\n              )\r\n            })}\r\n          </Picker>\r\n        </View>\r\n      )}\r\n      {/* Choose Agency Container */}\r\n\r\n      {\r\n        (showAgencyAdd) ? (\r\n          <View>\r\n            {/* Agency Name Container */}\r\n            < View style={styles.inputGroup}>\r\n              <View>\r\n                <Text style={styles.label}>Add New</Text>\r\n\r\n                <TextInput\r\n                  style={styles.inputtxt}\r\n                  placeholder={'Agency name'}\r\n                  value={agency}\r\n                  onChangeText={(val) => setAgency(val)}\r\n                />\r\n              </View>\r\n            </View>\r\n            {/* Agency Name Container */}\r\n\r\n            {/* ---------------------------Add Button Container--------------------------- */}\r\n            <View style={styles.add_main_container}>\r\n              {/* Add Button Container */}\r\n              <TouchableOpacity\r\n                style={styles.container_button}\r\n                onPress={addAgency}\r\n              >\r\n                <View style={styles.IconContainer}>\r\n                  <Entypo name=\"add-to-list\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n                </View>\r\n                <Text style={styles.add_button_txt}>Add Agency</Text>\r\n              </TouchableOpacity>\r\n              {/* Add Button Container */}\r\n            </View>\r\n            {/* ---------------------------Add Button Container--------------------------- */}\r\n          </View>\r\n        ) : (\r\n          <View style={styles.add_main_container}>\r\n            {/* Add Button Container */}\r\n            <TouchableOpacity\r\n              style={styles.container_button}\r\n              onPress={() => setShowAgencyAdd(true)}\r\n            >\r\n              <View style={styles.IconContainer}>\r\n                <AntDesign name=\"pluscircleo\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n              </View>\r\n              <Text style={styles.save_button_txt}>Add Agency in List</Text>\r\n            </TouchableOpacity>\r\n            {/* Add Button Container */}\r\n          </View>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      {/* Brand Name Container */}\r\n      <View style={styles.inputGroup}>\r\n\r\n        <Text style={styles.label}>Brand</Text>\r\n\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'Brand name'}\r\n          value={brand}\r\n          onChangeText={(val) => setBrand(val)}\r\n        />\r\n      </View>\r\n      {/* Brand Name Container */}\r\n\r\n      {/* Representative Name Container */}\r\n      <View style={styles.inputGroup}>\r\n\r\n        <Text style={styles.label}>Repersentative Name</Text>\r\n\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'First & last name'}\r\n          value={representative_name}\r\n          onChangeText={(val) => setRepresentative_name(val)}\r\n        />\r\n      </View>\r\n      {/* Representative Name Container */}\r\n\r\n      {/* Image Container */}\r\n      <View style={styles.inputGroup}>\r\n        <Text style={styles.label}>Image</Text>\r\n        <TouchableOpacity style={styles.inputtxt} onPress={pickImage}>\r\n          <Text>Pick an image from camera roll</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n      {/* Image Container */}\r\n\r\n      <ProgressBar style={{ marginTop: 10, marginBottom: 20, borderRadius: 10, width: \"100%\", height: 15 }} progress={0.5} color=\"#7db597\" />\r\n\r\n      <View style={styles.ImageContainer}>\r\n        {(imageUri) ?\r\n          (\r\n            <Image source={{ uri: imageUri }} style={{ width: \"40%\", height: 300, borderRadius: 10 }} />\r\n          ) : (\r\n            <Image source={alt} style={{ width: \"40%\", height: 300, borderRadius: 10 }} />\r\n          )\r\n        }\r\n      </View>\r\n\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n      <View style={styles.buttons_main_container}>\r\n        {/* Save Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={storeUser}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <Entypo name=\"save\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n          </View>\r\n          <Text style={styles.save_button_txt}>SAVE</Text>\r\n        </TouchableOpacity>\r\n        {/* Save Button Container */}\r\n\r\n        {/* Delete Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={() => alert('Delete Button Pressed')}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#000000\" />\r\n          </View>\r\n          <Text style={styles.delete_button_txt}>DELETE</Text>\r\n        </TouchableOpacity>\r\n        {/* Delete Button Container */}\r\n      </View>\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n\r\n    </ScrollView >\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ImageContainer: {\r\n    alignItems: \"center\"\r\n\r\n  },\r\n  snackBar: {\r\n    borderWidth: 0.5,\r\n    borderColor: \"#60AD7F\",\r\n    backgroundColor: \"#60AD7F\",\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    height: 54,\r\n    width: \"90%\",\r\n    zIndex: 2,\r\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\r\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\r\n    borderRadius: 3.25,\r\n    left: \"5%\",\r\n    top: 75,\r\n    // box-shadow: 0px 9.75px 9.75px -7.3125px rgba(32, 32, 32, 0.08);\r\n    // border-radius: 3.25px;\r\n  },\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  container_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  snack_txt: {\r\n    fontSize: 14,\r\n    color: \"#ffffff\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    lineHeight: 40,\r\n    left: 37\r\n  },\r\n  delete_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  save_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#60AD7F\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  add_button_txt: {\r\n    fontSize: 16,\r\n    color: \"#60AD7F\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  add_main_container: {\r\n    marginTop: -25,\r\n    marginBottom: 10\r\n  },\r\n  buttons_main_container: {\r\n    paddingTop: 0\r\n  },\r\n  container: {\r\n    padding: 10,\r\n    backgroundColor: '#ffffff'\r\n  },\r\n  inputtxt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    paddingTop: 0\r\n  },\r\n  labelTop: {\r\n    fontSize: 12,\r\n    color: \"#60AD7F\"\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n    color: \"rgba(0, 0, 0, 0.38);\"\r\n  },\r\n  picker: {\r\n    width: \"100%\",\r\n    color: \"black\",\r\n    zIndex: 1000,\r\n    marginTop: 4,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n  },\r\n  label_txt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    height: 56,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n  },\r\n  inputGroupTop: {\r\n    // flex: 1,\r\n    // flexDirection: 'row',\r\n    // justifyContent: \"space-between\",\r\n    height: 60,\r\n    padding: 10,\r\n    marginTop: 30,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n    zIndex: 1\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    color: '#6fa686',\r\n    backgroundColor: '#ffffff',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#e9e9e9',\r\n  },\r\n  buttonInner: {\r\n    padding: 10,\r\n  },\r\n})\r\n\r\nexport default AddUserScreen;\r\n","// screens/UserScreen.js\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, TouchableOpacity, Text } from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n//Importing the icon family\r\nimport firebase from '../database/firebaseDb';\r\n\r\nclass UserScreen extends Component {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [userArr, setUserArr] = useState([])\r\n\r\n  constructor() {\r\n    super();\r\n    this.firestoreRef = firebase.firestore().collection('agencies');\r\n    this.state = {\r\n      isLoading: true,\r\n      userArr: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   firebase.firestore().collection('agencies').onSnapshot(getCollection);\r\n  //   if (isLoading) {\r\n  //     return (\r\n  //       <View style={styles.preloader}>\r\n  //         <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n  //       </View>\r\n  //     )\r\n  //   }\r\n  // })\r\n\r\n  getCollection = (querySnapshot) => {\r\n    const userArr = [];\r\n    querySnapshot.forEach((res) => {\r\n      const {\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image,\r\n        Count\r\n      } = res.data();\r\n      userArr.push({\r\n        key: res.id,\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image,\r\n        Count\r\n      });\r\n    });\r\n\r\n    console.log(\"User Array is equal to : \", userArr);\r\n    this.setState({\r\n      userArr,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    return (\r\n      <ScrollView style={styles.container} >\r\n        {/* Monsters Container */}\r\n        < TouchableOpacity\r\n          style={styles.container_monsters}\r\n          onPress={() => {\r\n            this.props.navigation.navigate('AddUserScreen');\r\n          }}\r\n        >\r\n          <Text style={styles.heading_txt}>Monsters</Text>\r\n          <Ionicons name=\"add-circle-sharp\" size={23} style={{ marginLeft: -5, marginTop: 15 }} color=\"black\" />\r\n        </TouchableOpacity >\r\n        {/* Monsters Container */}\r\n\r\n        < View>\r\n          <Text style={styles.headingTop}>\r\n            List of monster 👹\r\n          </Text>\r\n        </View>\r\n\r\n        {\r\n          this.state.userArr.map((item, i) => {\r\n            return (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this.props.navigation.navigate('UserDetailScreen', {\r\n                    userkey: item.key,\r\n                    Agency: item.Agency,\r\n                    Representative_name: item.Representative_name,\r\n                    Brand: item.Brand,\r\n                    Image: item.Image,\r\n                    Count:item.Count\r\n                  });\r\n                }}\r\n                key={i}\r\n                style={styles.agency_list_container}>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.Agency}\r\n                  </Text>\r\n                  <Text style={styles.agency_txt2}>\r\n                    {item.Brand}\r\n                  </Text>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.Count}\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView >\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  agency_list_container: {\r\n    // borderWidth: 1,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n    borderBottomColor: \"#F8F8F8\",\r\n    borderBottomWidth: 1\r\n  },\r\n  agency_txt1: {\r\n    fontSize: 20,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  agency_txt2: {\r\n    paddingTop: 10,\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingBottom: 22,\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  headingTop: {\r\n    fontSize: 26,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    // borderWidth:1,\r\n    // borderColor:\"black\",\r\n    paddingTop: 30,\r\n    padding: 10,\r\n    paddingBottom: 30\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  container_monsters: {\r\n    marginTop: 0,\r\n    borderColor: \"#F5F5F5\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 56,\r\n    width: \"100%\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    borderRadius: 0,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  heading_txt: {\r\n    fontSize: 20,\r\n    color: \"#212121\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop: 13,\r\n    paddingLeft: 22\r\n  },\r\n})\r\n\r\nexport default UserScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Alert, Button, StyleSheet, TextInput, ScrollView, ActivityIndicator, View, Image, Text, TouchableOpacity } from 'react-native';\r\n//Importing Vector Icon\r\nimport { Entypo } from '@expo/vector-icons';\r\n//Importing Image\r\nimport img from \"../assets/User_details.png\";\r\nimport firebase from '../database/firebaseDb';\r\n\r\nfunction UserDetailScreen({ route }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n  })\r\n\r\n  const updateUser = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const updateDBRef = firebase.firestore().collection('agencies').doc(this.state.key);\r\n    updateDBRef.set({\r\n      agency: this.state.agency,\r\n      repName: this.state.repName,\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        key: '',\r\n        agency: '',\r\n        repName: '',\r\n        isLoading: false,\r\n      });\r\n      this.props.navigation.navigate('UserScreen');\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const deleteUser = () => {\r\n    // const dbRef = firebase.firestore().collection('agencies').doc(this.props.route.params.userkey)\r\n    //   dbRef.delete().then((res) => {\r\n    //       console.log('Item removed from database')\r\n    //       this.props.navigation.navigate('UserScreen');\r\n    //   })\r\n  }\r\n\r\n  const openTwoButtonAlert = () => {\r\n    Alert.alert(\r\n      'Delete User',\r\n      'Are you sure?',\r\n      [\r\n        { text: 'Yes', onPress: () => this.deleteUser() },\r\n        { text: 'No', onPress: () => console.log('No item was removed'), style: 'cancel' },\r\n      ],\r\n      {\r\n        cancelable: true\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <Image\r\n        style={styles.tinyLogo}\r\n        source={img}\r\n      />\r\n      <View style={styles.container}>\r\n        <View style={styles.agency_name_container}>\r\n          <View style={styles.halfWidth}>\r\n            <Text style={styles.agency_txt}>{route.params.Agency}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.agency_txt}>{route.params.userkey}</Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.representative_txt}>{route.params.Representative_name}</Text>\r\n          <Text style={styles.txt_description}>The same monster also produced</Text>\r\n        </View>\r\n        <View>\r\n          {[\"Brand name\", \"Brand name\", \"Brand name\"].map((v, i) => (\r\n            <View key={i}>\r\n              <Text style={styles.brand_txt}>{v}</Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.container_edit_button}\r\n          onPress={() => alert('Edit Button Pressed')}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <Entypo name=\"edit\" size={23} style={{ lineHeight: 40 }} color=\"rgba(0, 0, 0, 0.87)\" />\r\n          </View>\r\n          <Text style={styles.edit_txt}>EDIT</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  tinyLogo: {\r\n    width: \"100%\",\r\n    height: 273\r\n  },\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  container_edit_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  edit_txt: {\r\n    fontSize: 14,\r\n    color: \"#979797\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  agency_name_container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    borderColor: \"#000000\",\r\n    justifyContent: \"space-between\",\r\n    // borderWidth: 1,\r\n    width: \"100%\"\r\n  },\r\n  representative_txt: {\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    paddingTop: 20\r\n  },\r\n  txt_description: {\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    fontSize: 18,\r\n    paddingTop: 30\r\n  },\r\n  brand_txt: {\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    fontSize: 20,\r\n    paddingTop: 15\r\n  },\r\n  agency_txt: {\r\n    fontSize: 26,\r\n    fontWeight: \"100\",\r\n    width: \"auto\"\r\n  },\r\n  halfWidth: {\r\n    width: \"50%\"\r\n  },\r\n  topImage: {\r\n    width: \"100%\",\r\n    height: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 30\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#cccccc',\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    marginBottom: 7,\r\n  },\r\n})\r\n\r\nexport default UserDetailScreen;\r\n","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport AddUserScreen from './screens/AddUserScreen';\nimport UserScreen from './screens/UserScreen';\nimport UserDetailScreen from './screens/UserDetailScreen';\n\nconst Stack = createStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#eeeeee',\n        },\n        headerTintColor: '#242424',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}>\n      <Stack.Screen\n        name=\"UserScreen\"\n        component={UserScreen}\n        options={{ title: 'Agency List' }}\n      />\n      <Stack.Screen\n        name=\"AddUserScreen\"\n        component={AddUserScreen}\n        options={{ title: 'Select or add to the list' }}\n      />\n      <Stack.Screen\n        name=\"UserDetailScreen\"\n        component={UserDetailScreen}\n        options={{ title: 'Agency Detail' }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyStack />\n    </NavigationContainer>\n  );\n}\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}