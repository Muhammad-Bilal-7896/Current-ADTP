{"version":3,"sources":["assets/User_details.png","database/firebaseDb.js","screens/AddUserScreen.jsx","screens/UserScreen.jsx","screens/UserDetailScreen.jsx","App.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","picker_Items","label","value","styles","StyleSheet","create","snackBar","borderWidth","borderColor","backgroundColor","flexDirection","flex","alignItems","position","height","width","zIndex","shadowColor","shadowRadius","borderRadius","left","top","IconContainer","container_button","marginTop","justifyContent","snack_txt","fontSize","color","textAlign","lineHeight","delete_button_txt","save_button_txt","buttons_main_container","paddingTop","container","padding","inputtxt","labelTop","picker","label_txt","inputGroup","marginBottom","borderBottomWidth","borderBottomColor","inputGroupTop","preloader","right","bottom","button","buttonInner","AddUserScreen","navigation","useState","isLoading","setIsLoading","visibility","setVisibility","Device","agency","setAgency","brand","setBrand","representative_name","setRepresentative_name","image","setImage","picked","setPicked","pickedValue","setPickedValue","useEffect","View","style","ActivityIndicator","size","i","length","console","log","ScrollView","AntDesign","name","Text","Picker","selectedValue","onValueChange","itemValue","itemIndex","map","v","Item","TextInput","placeholder","onChangeText","val","TouchableOpacity","onPress","alert","firestore","collection","add","Category","Agency","Brand","Representative_name","Image","then","res","setTimeout","push","catch","err","error","Entypo","UserScreen","getCollection","querySnapshot","userArr","forEach","data","key","id","setState","firestoreRef","state","this","unsubscribe","onSnapshot","container_monsters","props","navigate","heading_txt","Ionicons","marginLeft","headingTop","item","userkey","agency_list_container","agency_txt1","agency_txt2","Component","paddingBottom","paddingLeft","container_edit_button","edit_txt","agency_name_container","representative_txt","txt_description","brand_txt","agency_txt","fontWeight","halfWidth","topImage","UserDetailScreen","route","loading","tinyLogo","source","img","params","Stack","createStackNavigator","MyStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","options","title","registerRootComponent","NavigationContainer"],"mappings":"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","file":"static/js/app.63c0025c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/User_details.a9c6e531.png\";","import * as firebase from 'firebase';\r\nimport firestore from 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDOorzy_UCYAuxX26WHxlI7EnciyH411Gw\",\r\n  authDomain: \"adtp-a04bd.firebaseapp.com\",\r\n  projectId: \"adtp-a04bd\",\r\n  storageBucket: \"adtp-a04bd.appspot.com\",\r\n  messagingSenderId: \"596482222382\",\r\n  appId: \"1:596482222382:web:cc73922b18932899c772bf\",\r\n  measurementId: \"G-8CPSE0XK0M\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nfirebase.firestore();\r\n\r\nexport default firebase;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TouchableOpacity, Text, StyleSheet, TextInput, ScrollView, ActivityIndicator, View } from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\n// Importing the react native drop down picker\r\nimport { Picker } from 'react-native'\r\n\r\n//Importing Device API to check the device type to render different content for android and ios\r\nimport * as Device from 'expo-device';\r\n\r\nimport firebase from '../database/firebaseDb';\r\n\r\nlet picker_Items = [\r\n  {\r\n    label: \"Company 1\",\r\n    value: 1\r\n  },\r\n  {\r\n    label: \"Company 2\",\r\n    value: 2\r\n  },\r\n  {\r\n    label: \"Company 3\",\r\n    value: 3\r\n  },\r\n  {\r\n    label: \"Company 4\",\r\n    value: 4\r\n  },\r\n  {\r\n    label: \"Company 5\",\r\n    value: 5\r\n  },\r\n  {\r\n    label: \"Company 6\",\r\n    value: 6\r\n  },\r\n  {\r\n    label: \"Company 7\",\r\n    value: 7\r\n  },\r\n  {\r\n    label: \"Company 8\",\r\n    value: 8\r\n  },\r\n  {\r\n    label: \"Company 9\",\r\n    value: 9\r\n  },\r\n  {\r\n    label: \"Company 10\",\r\n    value: 10\r\n  }\r\n]\r\n\r\nfunction AddUserScreen({ navigation }) {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const device_name = Device.osName;\r\n\r\n  const [agency, setAgency] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [representative_name, setRepresentative_name] = useState(\"\");\r\n  const [image, setImage] = useState('')\r\n\r\n  const [picked, setPicked] = useState(1);\r\n  const [pickedValue, setPickedValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    for (let i = 0; i < picker_Items.length; i++) {\r\n      if (picker_Items[i].value == picked) {\r\n        console.log(\"The Picked item label is ==> \", picker_Items[i].label);\r\n        setPickedValue(picker_Items[i].label);\r\n      }\r\n    }\r\n    console.log(\"Agency name is : \", agency)\r\n  })\r\n\r\n  const storeUser = () => {\r\n    if (pickedValue === '' || agency === '' || brand === '' || representative_name === '' || image === '') {\r\n      alert('Fill all the fields!');\r\n    } else {\r\n      setIsLoading(true);\r\n      const dbRef = firebase.firestore().collection('agencies');\r\n      dbRef.add({\r\n        Category: pickedValue,\r\n        Agency: agency,\r\n        Brand: brand,\r\n        Representative_name: representative_name,\r\n        Image: image\r\n      }).then((res) => {\r\n        setAgency('');\r\n        setBrand('');\r\n        setIsLoading(false);\r\n\r\n        //alert(\"You should now navigate to the listing screen because you've added the item\")\r\n        //props.navigation.navigate('UserScreen')\r\n        //navigate('UserScreen')\r\n        setVisibility(true);\r\n        setTimeout(() => { navigation.push('UserScreen'); }, 5000);\r\n        setTimeout(() => { setVisibility(false); }, 5000);\r\n      })\r\n        .catch((err) => {\r\n          console.error(\"Error found: \", err);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n\r\n      {(visibility) ? (\r\n        <View style={styles.snackBar}>\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#ffffff\" />\r\n          </View>\r\n          <Text style={styles.snack_txt}>Agency was added to the list</Text>\r\n        </View>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n\r\n      {/* Choose Agency Container */}\r\n      {(device_name == \"iOS\") ? (\r\n        <View style={styles.inputGroupTop}>\r\n          <View>\r\n            <Text style={styles.labelTop}>Agency name</Text>\r\n            <Picker\r\n              selectedValue={picked}\r\n              style={styles.picker}\r\n              onValueChange={(itemValue, itemIndex) =>\r\n                setPicked(itemValue)\r\n              }>\r\n              {picker_Items.map((v, i) => {\r\n                return (\r\n                  <Picker.Item key={i} label={v.label} value={v.value} />\r\n                )\r\n              })}\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.inputGroupTop}>\r\n          <View>\r\n            <Text style={styles.labelTop}>Agency name</Text>\r\n            <Picker\r\n              selectedValue={picked}\r\n              style={styles.picker}\r\n              onValueChange={(itemValue, itemIndex) =>\r\n                setPicked(itemValue)\r\n              }>\r\n              {picker_Items.map((v, i) => {\r\n                return (\r\n                  <Picker.Item key={i} label={v.label} value={v.value} />\r\n                )\r\n              })}\r\n            </Picker>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {/* Choose Agency Container */}\r\n\r\n      {/* Agency Name Container */}\r\n      <View style={styles.inputGroup}>\r\n        <View>\r\n          <Text style={styles.label}>Add New</Text>\r\n        </View>\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'Agency name'}\r\n          value={agency}\r\n          onChangeText={(val) => setAgency(val)}\r\n        />\r\n      </View>\r\n      {/* Agency Name Container */}\r\n\r\n      {/* Brand Name Container */}\r\n      <View style={styles.inputGroup}>\r\n        <View>\r\n          <Text style={styles.label}>Brand</Text>\r\n        </View>\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'Brand name'}\r\n          value={brand}\r\n          onChangeText={(val) => setBrand(val)}\r\n        />\r\n      </View>\r\n      {/* Brand Name Container */}\r\n\r\n      {/* Representative Name Container */}\r\n      <View style={styles.inputGroup}>\r\n        <View>\r\n          <Text style={styles.label}>Repersentative Name</Text>\r\n        </View>\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'First & last name'}\r\n          value={representative_name}\r\n          onChangeText={(val) => setRepresentative_name(val)}\r\n        />\r\n      </View>\r\n      {/* Representative Name Container */}\r\n\r\n      {/* Image Container */}\r\n      <View style={styles.inputGroup}>\r\n        <View>\r\n          <Text style={styles.label}>Image</Text>\r\n        </View>\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'Image'}\r\n          value={image}\r\n          onChangeText={(val) => setImage(val)}\r\n        />\r\n      </View>\r\n      {/* Image Container */}\r\n\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n      <View style={styles.buttons_main_container}>\r\n        {/* Save Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={storeUser}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <Entypo name=\"save\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n          </View>\r\n          <Text style={styles.save_button_txt}>SAVE</Text>\r\n        </TouchableOpacity>\r\n        {/* Save Button Container */}\r\n\r\n        {/* Delete Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={() => alert('Delete Button Pressed')}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#000000\" />\r\n          </View>\r\n          <Text style={styles.delete_button_txt}>DELETE</Text>\r\n        </TouchableOpacity>\r\n        {/* Delete Button Container */}\r\n      </View>\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n\r\n    </ScrollView >\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  snackBar: {\r\n    borderWidth: 0.5,\r\n    borderColor: \"#60AD7F\",\r\n    backgroundColor: \"#60AD7F\",\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    height: 54,\r\n    width: \"90%\",\r\n    zIndex: 2,\r\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\r\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\r\n    borderRadius: 3.25,\r\n    left: \"5%\",\r\n    top: 75,\r\n    // box-shadow: 0px 9.75px 9.75px -7.3125px rgba(32, 32, 32, 0.08);\r\n    // border-radius: 3.25px;\r\n  },\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  container_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  snack_txt: {\r\n    fontSize: 14,\r\n    color: \"#ffffff\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    lineHeight: 40,\r\n    left: 37\r\n  },\r\n  delete_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  save_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#60AD7F\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  buttons_main_container: {\r\n    paddingTop: 0\r\n  },\r\n  container: {\r\n    padding: 10,\r\n    backgroundColor: '#ffffff'\r\n  },\r\n  inputtxt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    paddingTop: 0\r\n  },\r\n  labelTop: {\r\n    fontSize: 12,\r\n    color: \"#60AD7F\"\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n    color: \"rgba(0, 0, 0, 0.38);\"\r\n  },\r\n  picker: {\r\n    width: \"100%\",\r\n    color: \"black\",\r\n    zIndex: 1000,\r\n    marginTop: -12\r\n  },\r\n  label_txt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    height: 56,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n  },\r\n  inputGroupTop: {\r\n    // flex: 1,\r\n    // flexDirection: 'row',\r\n    // justifyContent: \"space-between\",\r\n    height: 60,\r\n    padding: 10,\r\n    marginTop: 30,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n    zIndex: 1\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    color: '#6fa686',\r\n    backgroundColor: '#ffffff',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#e9e9e9',\r\n  },\r\n  buttonInner: {\r\n    padding: 10,\r\n  },\r\n})\r\n\r\nexport default AddUserScreen;\r\n","// screens/UserScreen.js\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, TouchableOpacity, Text } from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n//Importing the icon family\r\nimport firebase from '../database/firebaseDb';\r\n\r\nclass UserScreen extends Component {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [userArr, setUserArr] = useState([])\r\n\r\n  constructor() {\r\n    super();\r\n    this.firestoreRef = firebase.firestore().collection('agencies');\r\n    this.state = {\r\n      isLoading: true,\r\n      userArr: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   firebase.firestore().collection('agencies').onSnapshot(getCollection);\r\n  //   if (isLoading) {\r\n  //     return (\r\n  //       <View style={styles.preloader}>\r\n  //         <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n  //       </View>\r\n  //     )\r\n  //   }\r\n  // })\r\n\r\n  getCollection = (querySnapshot) => {\r\n    const userArr = [];\r\n    querySnapshot.forEach((res) => {\r\n      const {\r\n        Category,\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image\r\n      } = res.data();\r\n      userArr.push({\r\n        key: res.id,\r\n        Category,\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image\r\n      });\r\n    });\r\n\r\n    console.log(\"User Array is equal to : \", userArr);\r\n    this.setState({\r\n      userArr,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    return (\r\n      <ScrollView style={styles.container} >\r\n        {/* Monsters Container */}\r\n        < TouchableOpacity\r\n          style={styles.container_monsters}\r\n          onPress={() => {\r\n            this.props.navigation.navigate('AddUserScreen');\r\n          }}\r\n        >\r\n          <Text style={styles.heading_txt}>Monsters</Text>\r\n          <Ionicons name=\"add-circle-sharp\" size={23} style={{ marginLeft: -5, marginTop: 15 }} color=\"black\" />\r\n        </TouchableOpacity >\r\n        {/* Monsters Container */}\r\n\r\n        < View>\r\n          <Text style={styles.headingTop}>\r\n            List of monster 👹\r\n          </Text>\r\n        </View>\r\n\r\n        {\r\n          this.state.userArr.map((item, i) => {\r\n            return (\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  this.props.navigation.navigate('UserDetailScreen', {\r\n                    userkey: item.key,\r\n                    Agency:item.Agency,\r\n                    Representative_name:item.Representative_name,\r\n                    Brand:item.Brand\r\n                  });\r\n                }}\r\n                key={i}\r\n                style={styles.agency_list_container}>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.Agency}\r\n                  </Text>\r\n                  <Text style={styles.agency_txt2}>\r\n                    {item.Brand}\r\n                  </Text>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.key}\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView >\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  agency_list_container: {\r\n    // borderWidth: 1,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n    borderBottomColor: \"#F8F8F8\",\r\n    borderBottomWidth: 1\r\n  },\r\n  agency_txt1: {\r\n    fontSize: 20,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  agency_txt2: {\r\n    paddingTop: 10,\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingBottom: 22,\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  headingTop: {\r\n    fontSize: 26,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    // borderWidth:1,\r\n    // borderColor:\"black\",\r\n    paddingTop: 30,\r\n    padding: 10,\r\n    paddingBottom: 30\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  container_monsters: {\r\n    marginTop: 0,\r\n    borderColor: \"#F5F5F5\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 56,\r\n    width: \"100%\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    borderRadius: 0,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  heading_txt: {\r\n    fontSize: 20,\r\n    color: \"#212121\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop: 13,\r\n    paddingLeft: 22\r\n  },\r\n})\r\n\r\nexport default UserScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Alert, Button, StyleSheet, TextInput, ScrollView, ActivityIndicator, View, Image, Text, TouchableOpacity } from 'react-native';\r\n//Importing Vector Icon\r\nimport { Entypo } from '@expo/vector-icons';\r\n//Importing Image\r\nimport img from \"../assets/User_details.png\";\r\nimport firebase from '../database/firebaseDb';\r\n\r\nfunction UserDetailScreen({ route }) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n  })\r\n\r\n  const updateUser = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const updateDBRef = firebase.firestore().collection('agencies').doc(this.state.key);\r\n    updateDBRef.set({\r\n      agency: this.state.agency,\r\n      repName: this.state.repName,\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        key: '',\r\n        agency: '',\r\n        repName: '',\r\n        isLoading: false,\r\n      });\r\n      this.props.navigation.navigate('UserScreen');\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const deleteUser = () => {\r\n    // const dbRef = firebase.firestore().collection('agencies').doc(this.props.route.params.userkey)\r\n    //   dbRef.delete().then((res) => {\r\n    //       console.log('Item removed from database')\r\n    //       this.props.navigation.navigate('UserScreen');\r\n    //   })\r\n  }\r\n\r\n  const openTwoButtonAlert = () => {\r\n    Alert.alert(\r\n      'Delete User',\r\n      'Are you sure?',\r\n      [\r\n        { text: 'Yes', onPress: () => this.deleteUser() },\r\n        { text: 'No', onPress: () => console.log('No item was removed'), style: 'cancel' },\r\n      ],\r\n      {\r\n        cancelable: true\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <Image\r\n        style={styles.tinyLogo}\r\n        source={img}\r\n      />\r\n      <View style={styles.container}>\r\n        <View style={styles.agency_name_container}>\r\n          <View style={styles.halfWidth}>\r\n            <Text style={styles.agency_txt}>{route.params.Agency}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.agency_txt}>{route.params.userkey}</Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.representative_txt}>{route.params.Representative_name}</Text>\r\n          <Text style={styles.txt_description}>The same monster also produced</Text>\r\n        </View>\r\n        <View>\r\n          {[\"Brand name\", \"Brand name\", \"Brand name\"].map((v, i) => (\r\n            <View key={i}>\r\n              <Text style={styles.brand_txt}>{v}</Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.container_edit_button}\r\n          onPress={() => alert('Edit Button Pressed')}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <Entypo name=\"edit\" size={23} style={{ lineHeight: 40 }} color=\"rgba(0, 0, 0, 0.87)\" />\r\n          </View>\r\n          <Text style={styles.edit_txt}>EDIT</Text>\r\n        </TouchableOpacity>\r\n        {/* <View style={styles.inputGroup}>\r\n          <TextInput\r\n            placeholder={'Name'}\r\n            value={this.state.agency}\r\n            onChangeText={(val) => this.inputValueUpdate(val, 'agency')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n            placeholder={'Rep name'}\r\n            value={this.state.repName}\r\n            onChangeText={(val) => this.inputValueUpdate(val, 'repName')}\r\n          />\r\n        </View>\r\n        <View style={styles.button}>\r\n          <Button\r\n            title='Update'\r\n            onPress={() => this.updateUser()}\r\n            color=\"#19AC52\"\r\n          />\r\n        </View>\r\n        <View>\r\n          <Button\r\n            title='Delete'\r\n            onPress={this.openTwoButtonAlert}\r\n            color=\"#E37399\"\r\n          />\r\n        </View> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  container_edit_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  edit_txt: {\r\n    fontSize: 14,\r\n    color: \"#979797\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  agency_name_container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    borderColor: \"#000000\",\r\n    justifyContent: \"space-between\",\r\n    // borderWidth: 1,\r\n    width: \"100%\"\r\n  },\r\n  representative_txt: {\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    paddingTop: 20\r\n  },\r\n  txt_description: {\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    fontSize: 18,\r\n    paddingTop: 30\r\n  },\r\n  brand_txt: {\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    fontSize: 20,\r\n    paddingTop: 15\r\n  },\r\n  agency_txt: {\r\n    fontSize: 26,\r\n    fontWeight: \"100\",\r\n    width: \"auto\"\r\n  },\r\n  halfWidth: {\r\n    width: \"50%\"\r\n  },\r\n  topImage: {\r\n    width: \"100%\",\r\n    height: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 30\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#cccccc',\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    marginBottom: 7,\r\n  },\r\n})\r\n\r\nexport default UserDetailScreen;\r\n","import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport AddUserScreen from './screens/AddUserScreen';\nimport UserScreen from './screens/UserScreen';\nimport UserDetailScreen from './screens/UserDetailScreen';\n\nconst Stack = createStackNavigator();\n\nfunction MyStack() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: '#eeeeee',\n        },\n        headerTintColor: '#242424',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}>\n      <Stack.Screen\n        name=\"UserScreen\"\n        component={UserScreen}\n        options={{ title: 'Agency List' }}\n      />\n      <Stack.Screen\n        name=\"AddUserScreen\"\n        component={AddUserScreen}\n        options={{ title: 'Select or add to the list' }}\n      />\n      <Stack.Screen\n        name=\"UserDetailScreen\"\n        component={UserDetailScreen}\n        options={{ title: 'Agency Detail' }}\n      />\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <MyStack />\n    </NavigationContainer>\n  );\n}\n\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}