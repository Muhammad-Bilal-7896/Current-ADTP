{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{Platform}from'expo-modules-core';import UAParser from'ua-parser-js';import{DeviceType}from\"./Device.types\";var result=null;if(Platform.isDOMAvailable){var parser=new UAParser(window.navigator.userAgent);result=parser.getResult();}function convertGiBtoBytes(gib){return Math.round(gib*Math.pow(1024,3));}export default{get isDevice(){return true;},get brand(){return null;},get manufacturer(){return result&&result.device.vendor||null;},get modelName(){return result&&result.device.model||null;},get deviceYearClass(){return null;},get totalMemory(){if(Platform.isDOMAvailable&&'deviceMemory'in navigator){var _navigator=navigator,deviceMemory=_navigator.deviceMemory;return convertGiBtoBytes(deviceMemory);}return null;},get supportedCpuArchitectures(){return result&&result.cpu.architecture?[result.cpu.architecture]:null;},get osName(){return result&&result.os.name||'';},get osVersion(){return result&&result.os.version||'';},get osBuildId(){return null;},get osInternalBuildId(){return null;},get deviceName(){return null;},getDeviceTypeAsync:function getDeviceTypeAsync(){return function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=result.device.type;_context.next=_context.t0==='mobile'?3:_context.t0==='tablet'?4:_context.t0==='smarttv'?5:_context.t0==='console'?6:_context.t0==='embedded'?6:_context.t0==='wearable'?6:7;break;case 3:return _context.abrupt(\"return\",DeviceType.PHONE);case 4:return _context.abrupt(\"return\",DeviceType.TABLET);case 5:return _context.abrupt(\"return\",DeviceType.TV);case 6:return _context.abrupt(\"return\",DeviceType.UNKNOWN);case 7:return _context.abrupt(\"return\",DeviceType.DESKTOP);case 8:case\"end\":return _context.stop();}}},null,null,null,Promise);}();},isRootedExperimentalAsync:function isRootedExperimentalAsync(){return function _callee2(){return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",false);case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}();}};","map":{"version":3,"sources":["../src/ExpoDevice.web.ts"],"names":[],"mappings":"4DAAA,OAAS,QAAT,KAAyB,mBAAzB,CACA,MAAO,CAAA,QAAP,KAAqB,cAArB,CAEA,OAAS,UAAT,sBAIA,GAAI,CAAA,MAAM,CAAQ,IAAlB,CACA,GAAI,QAAQ,CAAC,cAAb,CAA6B,CAC3B,GAAM,CAAA,MAAM,CAAG,GAAI,CAAA,QAAJ,CAAa,MAAM,CAAC,SAAP,CAAiB,SAA9B,CAAf,CACA,MAAM,CAAG,MAAM,CAAC,SAAP,EAAT,CACD,CAED,QAAS,CAAA,iBAAT,CAA2B,GAA3B,CAAsC,CACpC,MAAO,CAAA,IAAI,CAAC,KAAL,CAAW,GAAG,UAAG,IAAH,CAAW,CAAX,CAAd,CAAP,CACD,CAED,cAAe,CACb,GAAI,CAAA,QAAJ,EAAY,CACV,MAAO,KAAP,CACD,CAHY,CAIb,GAAI,CAAA,KAAJ,EAAS,CACP,MAAO,KAAP,CACD,CANY,CAOb,GAAI,CAAA,YAAJ,EAAgB,CACd,MAAQ,CAAA,MAAM,EAAI,MAAM,CAAC,MAAP,CAAc,MAAzB,EAAoC,IAA3C,CACD,CATY,CAUb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAQ,CAAA,MAAM,EAAI,MAAM,CAAC,MAAP,CAAc,KAAzB,EAAmC,IAA1C,CACD,CAZY,CAab,GAAI,CAAA,eAAJ,EAAmB,CACjB,MAAO,KAAP,CACD,CAfY,CAgBb,GAAI,CAAA,WAAJ,EAAe,CACb,GAAI,QAAQ,CAAC,cAAT,EAA2B,gBAAkB,CAAA,SAAjD,CAA4D,CAC1D,eAAyB,SAAzB,CAAQ,YAAR,YAAQ,YAAR,CACA,MAAO,CAAA,iBAAiB,CAAC,YAAD,CAAxB,CACD,CACD,MAAO,KAAP,CACD,CAtBY,CAuBb,GAAI,CAAA,yBAAJ,EAA6B,CAC3B,MAAO,CAAA,MAAM,EAAI,MAAM,CAAC,GAAP,CAAW,YAArB,CAAoC,CAAC,MAAM,CAAC,GAAP,CAAW,YAAZ,CAApC,CAAgE,IAAvE,CACD,CAzBY,CA0Bb,GAAI,CAAA,MAAJ,EAAU,CACR,MAAQ,CAAA,MAAM,EAAI,MAAM,CAAC,EAAP,CAAU,IAArB,EAA8B,EAArC,CACD,CA5BY,CA6Bb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAQ,CAAA,MAAM,EAAI,MAAM,CAAC,EAAP,CAAU,OAArB,EAAiC,EAAxC,CACD,CA/BY,CAgCb,GAAI,CAAA,SAAJ,EAAa,CACX,MAAO,KAAP,CACD,CAlCY,CAmCb,GAAI,CAAA,iBAAJ,EAAqB,CACnB,MAAO,KAAP,CACD,CArCY,CAsCb,GAAI,CAAA,UAAJ,EAAc,CACZ,MAAO,KAAP,CACD,CAxCY,CAyCP,kBAzCO,8BAyCW,wJACd,MAAM,CAAC,MAAP,CAAc,IADA,6BAEf,QAFe,iBAIf,QAJe,iBAMf,SANe,iBAQf,SARe,iBASf,UATe,iBAUf,UAVe,kDAGX,UAAU,CAAC,KAHA,yCAKX,UAAU,CAAC,MALA,yCAOX,UAAU,CAAC,EAPA,yCAWX,UAAU,CAAC,OAXA,yCAaX,UAAU,CAAC,OAbA,0EAevB,CAxDY,CAyDP,yBAzDO,qCAyDkB,kLACtB,KADsB,2EAE9B,CA3DY,CAAf","sourcesContent":["import { Platform } from 'expo-modules-core';\nimport UAParser from 'ua-parser-js';\n\nimport { DeviceType } from './Device.types';\n\ntype NavigatorWithDeviceMemory = Navigator & { deviceMemory: number };\n\nlet result: any = null;\nif (Platform.isDOMAvailable) {\n  const parser = new UAParser(window.navigator.userAgent);\n  result = parser.getResult();\n}\n\nfunction convertGiBtoBytes(gib: number): number {\n  return Math.round(gib * 1024 ** 3);\n}\n\nexport default {\n  get isDevice(): boolean {\n    return true;\n  },\n  get brand(): null {\n    return null;\n  },\n  get manufacturer(): null {\n    return (result && result.device.vendor) || null;\n  },\n  get modelName(): string | null {\n    return (result && result.device.model) || null;\n  },\n  get deviceYearClass(): null {\n    return null;\n  },\n  get totalMemory(): number | null {\n    if (Platform.isDOMAvailable && 'deviceMemory' in navigator) {\n      const { deviceMemory } = navigator as NavigatorWithDeviceMemory;\n      return convertGiBtoBytes(deviceMemory);\n    }\n    return null;\n  },\n  get supportedCpuArchitectures(): string[] | null {\n    return result && result.cpu.architecture ? [result.cpu.architecture] : null;\n  },\n  get osName(): string {\n    return (result && result.os.name) || '';\n  },\n  get osVersion(): string {\n    return (result && result.os.version) || '';\n  },\n  get osBuildId(): null {\n    return null;\n  },\n  get osInternalBuildId(): null {\n    return null;\n  },\n  get deviceName(): null {\n    return null;\n  },\n  async getDeviceTypeAsync(): Promise<DeviceType> {\n    switch (result.device.type) {\n      case 'mobile':\n        return DeviceType.PHONE;\n      case 'tablet':\n        return DeviceType.TABLET;\n      case 'smarttv':\n        return DeviceType.TV;\n      case 'console':\n      case 'embedded':\n      case 'wearable':\n        return DeviceType.UNKNOWN;\n      default:\n        return DeviceType.DESKTOP;\n    }\n  },\n  async isRootedExperimentalAsync(): Promise<boolean> {\n    return false;\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}