{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo } from '@expo/vector-icons';\nimport img from \"../assets/User_details.png\";\nimport firebase from \"../database/firebaseDb\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction UserDetailScreen(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    if (loading) {\n      return _jsx(View, {\n        style: styles.preloader,\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\"\n        })\n      });\n    }\n  });\n\n  var updateUser = function updateUser() {\n    _this.setState({\n      isLoading: true\n    });\n\n    var updateDBRef = firebase.firestore().collection('agencies').doc(_this.state.key);\n    updateDBRef.set({\n      agency: _this.state.agency,\n      repName: _this.state.repName\n    }).then(function (docRef) {\n      _this.setState({\n        key: '',\n        agency: '',\n        repName: '',\n        isLoading: false\n      });\n\n      _this.props.navigation.navigate('UserScreen');\n    }).catch(function (error) {\n      console.error(\"Error: \", error);\n\n      _this.setState({\n        isLoading: false\n      });\n    });\n  };\n\n  var deleteUser = function deleteUser() {};\n\n  var openTwoButtonAlert = function openTwoButtonAlert() {\n    Alert.alert('Delete User', 'Are you sure?', [{\n      text: 'Yes',\n      onPress: function onPress() {\n        return _this.deleteUser();\n      }\n    }, {\n      text: 'No',\n      onPress: function onPress() {\n        return console.log('No item was removed');\n      },\n      style: 'cancel'\n    }], {\n      cancelable: true\n    });\n  };\n\n  return _jsxs(ScrollView, {\n    children: [_jsx(Image, {\n      style: styles.tinyLogo,\n      source: img\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.agency_name_container,\n        children: [_jsx(View, {\n          style: styles.halfWidth,\n          children: _jsx(Text, {\n            style: styles.agency_txt,\n            children: \"Agency name\"\n          })\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.agency_txt,\n            children: route\n          })\n        })]\n      }), _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.representative_txt,\n          children: \"Representative name\"\n        }), _jsx(Text, {\n          style: styles.txt_description,\n          children: \"The same monster also produced\"\n        })]\n      }), _jsx(View, {\n        children: [\"Brand name\", \"Brand name\", \"Brand name\"].map(function (v, i) {\n          return _jsx(View, {\n            children: _jsx(Text, {\n              style: styles.brand_txt,\n              children: v\n            })\n          }, i);\n        })\n      }), _jsxs(TouchableOpacity, {\n        style: styles.container_edit_button,\n        onPress: function onPress() {\n          return alert('Edit Button Pressed');\n        },\n        children: [_jsx(Entypo, {\n          name: \"edit\",\n          size: 23,\n          style: {\n            marginLeft: 12,\n            marginTop: 12\n          },\n          color: \"rgba(0, 0, 0, 0.87)\"\n        }), _jsx(Text, {\n          style: styles.edit_txt,\n          children: \"EDIT\"\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  container_edit_button: {\n    marginTop: 20,\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\n    justifyContent: \"flex-start\",\n    borderWidth: 1,\n    height: 50,\n    width: \"100%\",\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\n    borderRadius: 4,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  edit_txt: {\n    fontSize: 14,\n    color: \"#979797\",\n    width: \"85%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    paddingTop: 15\n  },\n  agency_name_container: {\n    flex: 1,\n    flexDirection: \"row\",\n    borderColor: \"#000000\",\n    justifyContent: \"space-between\",\n    width: \"100%\"\n  },\n  representative_txt: {\n    fontSize: 14,\n    color: \"rgba(0, 0, 0, 0.6)\",\n    paddingTop: 20\n  },\n  txt_description: {\n    color: \"rgba(0, 0, 0, 0.6)\",\n    fontSize: 18,\n    paddingTop: 30\n  },\n  brand_txt: {\n    color: \"rgba(0, 0, 0, 0.87);\",\n    fontSize: 20,\n    paddingTop: 15\n  },\n  agency_txt: {\n    fontSize: 26,\n    fontWeight: \"100\",\n    width: \"auto\"\n  },\n  halfWidth: {\n    width: \"50%\"\n  },\n  topImage: {\n    width: \"100%\",\n    height: 50\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#cccccc'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    marginBottom: 7\n  }\n});\nexport default UserDetailScreen;","map":{"version":3,"sources":["H:/ADTP App current/screens/UserDetailScreen.jsx"],"names":["React","useState","useEffect","Entypo","img","firebase","UserDetailScreen","route","loading","setLoading","styles","preloader","updateUser","setState","isLoading","updateDBRef","firestore","collection","doc","state","key","set","agency","repName","then","docRef","props","navigation","navigate","catch","error","console","deleteUser","openTwoButtonAlert","Alert","alert","text","onPress","log","style","cancelable","tinyLogo","container","agency_name_container","halfWidth","agency_txt","representative_txt","txt_description","map","v","i","brand_txt","container_edit_button","marginLeft","marginTop","edit_txt","StyleSheet","create","borderColor","justifyContent","borderWidth","height","width","backgroundColor","borderRadius","flex","flexDirection","fontSize","color","alignItems","textAlign","paddingTop","fontWeight","topImage","padding","inputGroup","marginBottom","borderBottomWidth","borderBottomColor","left","right","top","bottom","position","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Alert, Button, StyleSheet, TextInput, ScrollView, ActivityIndicator, View, Image, Text, TouchableOpacity } from 'react-native';\r\n//Importing Vector Icon\r\nimport { Entypo } from '@expo/vector-icons';\r\n//Importing Image\r\nimport img from \"../assets/User_details.png\";\r\nimport firebase from '../database/firebaseDb';\r\n\r\nfunction UserDetailScreen({route}) {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n  })\r\n\r\n  const updateUser = () => {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const updateDBRef = firebase.firestore().collection('agencies').doc(this.state.key);\r\n    updateDBRef.set({\r\n      agency: this.state.agency,\r\n      repName: this.state.repName,\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        key: '',\r\n        agency: '',\r\n        repName: '',\r\n        isLoading: false,\r\n      });\r\n      this.props.navigation.navigate('UserScreen');\r\n    })\r\n      .catch((error) => {\r\n        console.error(\"Error: \", error);\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      });\r\n  }\r\n\r\n  const deleteUser = () => {\r\n    // const dbRef = firebase.firestore().collection('agencies').doc(this.props.route.params.userkey)\r\n    //   dbRef.delete().then((res) => {\r\n    //       console.log('Item removed from database')\r\n    //       this.props.navigation.navigate('UserScreen');\r\n    //   })\r\n  }\r\n\r\n  const openTwoButtonAlert = () => {\r\n    Alert.alert(\r\n      'Delete User',\r\n      'Are you sure?',\r\n      [\r\n        { text: 'Yes', onPress: () => this.deleteUser() },\r\n        { text: 'No', onPress: () => console.log('No item was removed'), style: 'cancel' },\r\n      ],\r\n      {\r\n        cancelable: true\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <ScrollView>\r\n      <Image\r\n        style={styles.tinyLogo}\r\n        source={img}\r\n      />\r\n      <View style={styles.container}>\r\n        <View style={styles.agency_name_container}>\r\n          <View style={styles.halfWidth}>\r\n            <Text style={styles.agency_txt}>Agency name</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.agency_txt}>{route}</Text>\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <Text style={styles.representative_txt}>Representative name</Text>\r\n          <Text style={styles.txt_description}>The same monster also produced</Text>\r\n        </View>\r\n        <View>\r\n          {[\"Brand name\", \"Brand name\", \"Brand name\"].map((v, i) => (\r\n            <View key={i}>\r\n              <Text style={styles.brand_txt}>{v}</Text>\r\n            </View>\r\n          ))}\r\n        </View>\r\n        <TouchableOpacity\r\n          style={styles.container_edit_button}\r\n          onPress={() => alert('Edit Button Pressed')}\r\n        >\r\n          <Entypo name=\"edit\" size={23} style={{ marginLeft: 12, marginTop: 12 }} color=\"rgba(0, 0, 0, 0.87)\" />\r\n          <Text style={styles.edit_txt}>EDIT</Text>\r\n        </TouchableOpacity>\r\n        {/* <View style={styles.inputGroup}>\r\n          <TextInput\r\n            placeholder={'Name'}\r\n            value={this.state.agency}\r\n            onChangeText={(val) => this.inputValueUpdate(val, 'agency')}\r\n          />\r\n        </View>\r\n        <View style={styles.inputGroup}>\r\n          <TextInput\r\n            placeholder={'Rep name'}\r\n            value={this.state.repName}\r\n            onChangeText={(val) => this.inputValueUpdate(val, 'repName')}\r\n          />\r\n        </View>\r\n        <View style={styles.button}>\r\n          <Button\r\n            title='Update'\r\n            onPress={() => this.updateUser()}\r\n            color=\"#19AC52\"\r\n          />\r\n        </View>\r\n        <View>\r\n          <Button\r\n            title='Delete'\r\n            onPress={this.openTwoButtonAlert}\r\n            color=\"#E37399\"\r\n          />\r\n        </View> */}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container_edit_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  edit_txt: {\r\n    fontSize: 14,\r\n    color: \"#979797\",\r\n    width: \"85%\",\r\n    // borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop: 15\r\n  },\r\n  agency_name_container: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    borderColor: \"#000000\",\r\n    justifyContent: \"space-between\",\r\n    // borderWidth: 1,\r\n    width: \"100%\"\r\n  },\r\n  representative_txt: {\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    paddingTop: 20\r\n  },\r\n  txt_description: {\r\n    color: \"rgba(0, 0, 0, 0.6)\",\r\n    fontSize: 18,\r\n    paddingTop: 30\r\n  },\r\n  brand_txt: {\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    fontSize: 20,\r\n    paddingTop: 15\r\n  },\r\n  agency_txt: {\r\n    fontSize: 26,\r\n    fontWeight: \"100\",\r\n    width: \"auto\"\r\n  },\r\n  halfWidth: {\r\n    width: \"50%\"\r\n  },\r\n  topImage: {\r\n    width: \"100%\",\r\n    height: 50,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n    paddingTop: 30\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    padding: 0,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#cccccc',\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    marginBottom: 7,\r\n  },\r\n})\r\n\r\nexport default UserDetailScreen;\r\n"]},"metadata":{},"sourceType":"module"}