{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Entypo } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nimport { ProgressBar, Colors } from 'react-native-paper';\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport * as Device from 'expo-device';\nimport alt from \"../assets/alter.png\";\nimport * as ImagePicker from 'expo-image-picker';\nimport \"firebase/storage\";\nimport firebase from \"../database/firebaseDb\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar picker_Items = [{\n  label: \"Company 1\",\n  value: 1\n}, {\n  label: \"Company 2\",\n  value: 2\n}, {\n  label: \"Company 3\",\n  value: 3\n}, {\n  label: \"Company 4\",\n  value: 4\n}, {\n  label: \"Company 5\",\n  value: 5\n}, {\n  label: \"Company 6\",\n  value: 6\n}, {\n  label: \"Company 7\",\n  value: 7\n}, {\n  label: \"Company 8\",\n  value: 8\n}, {\n  label: \"Company 9\",\n  value: 9\n}, {\n  label: \"Company 10\",\n  value: 10\n}];\n\nfunction AddUserScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(picker_Items),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pickerItems = _useState4[0],\n      setPickerItems = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visibility = _useState6[0],\n      setVisibility = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imageUri = _useState8[0],\n      setImageUri = _useState8[1];\n\n  var device_name = Device.osName;\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      agency = _useState10[0],\n      setAgency = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      brand = _useState12[0],\n      setBrand = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      representative_name = _useState14[0],\n      setRepresentative_name = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      image = _useState16[0],\n      setImage = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      picked = _useState18[0],\n      setPicked = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      pickedValue = _useState20[0],\n      setPickedValue = _useState20[1];\n\n  var _useState21 = useState(0),\n      _useState22 = _slicedToArray(_useState21, 2),\n      selected_brand_count = _useState22[0],\n      set_selected_brand_count = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      firestoreData = _useState24[0],\n      setFirestoreData = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      showAgencyAdd = _useState26[0],\n      setShowAgencyAdd = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      addCount = _useState28[0],\n      setAddCount = _useState28[1];\n\n  useEffect(function () {\n    if (pickedValue != '') {\n      var count = 0;\n\n      for (var i = 0; i < firestoreData.length; i++) {\n        if (firestoreData[i].Agency == pickedValue) {\n          count = count + 1;\n        }\n      }\n\n      console.log(\"The slected agency '\" + pickedValue + \"' had appeared \\\"\" + count + \"\\\" number of times previously\");\n      console.log(\"----------?\" + count);\n      set_selected_brand_count(count);\n    }\n\n    if (isLoading) {\n      return _jsx(View, {\n        style: styles.preloader,\n        children: _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#9E9E9E\"\n        })\n      });\n    }\n\n    for (var _i = 0; _i < pickerItems.length; _i++) {\n      if (pickerItems[_i].value == picked) {\n        setPickedValue(pickerItems[_i].label);\n      }\n    }\n\n    if (true) {\n      var db = firebase.firestore();\n      db.collection(\"agencies\").get().then(function (snapshot) {\n        var data = [];\n        snapshot.forEach(function (element) {\n          data.push(_extends({\n            id: element.id,\n            \"Agency\": element.Agency,\n            \"Brand\": element.Brand,\n            \"Representative_name\": element.Representative_name,\n            \"Image\": element.Image\n          }, element.data()));\n        });\n\n        if (firestoreData.length != data.length) {\n          setFirestoreData(data);\n        }\n      }).catch(function (err) {\n        console.log(\"Firebase data error ==> \", err);\n      });\n    }\n  });\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(\"Result of Image ==> \", result);\n\n            if (!result.cancelled) {\n              setImageUri(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var addAgency = function addAgency() {\n    if (agency != '') {\n      var length = pickerItems.length;\n      setPickerItems([].concat(_toConsumableArray(pickerItems), [{\n        label: agency,\n        value: length + 1\n      }]));\n      setShowAgencyAdd(false);\n      alert(\"Agency Added\");\n    } else {\n      alert(\"Please enter an agency name to add it to the list.\");\n    }\n  };\n\n  var storeUser = function storeUser() {\n    if (pickedValue === '' || brand === '' || representative_name === '' || imageUri === '') {\n      alert('Fill all the fields!');\n    } else {\n      setIsLoading(true);\n      var dbRef = firebase.firestore().collection('agencies');\n      var count = selected_brand_count + 1;\n      dbRef.add({\n        Agency: pickedValue,\n        Brand: brand,\n        Representative_name: representative_name,\n        Image: \"imageUri\",\n        Count: count\n      }).then(function (res) {\n        setVisibility(true);\n        setPickedValue('');\n        setBrand('');\n        setAgency('');\n        setPicked(1);\n        setRepresentative_name('');\n        set_selected_brand_count(0);\n        setIsLoading(false);\n        setImageUri('');\n        setTimeout(function () {\n          navigation.push('UserScreen');\n        }, 2000);\n        setTimeout(function () {\n          setVisibility(false);\n        }, 4000);\n      }).catch(function (err) {\n        console.error(\"Error found: \", err);\n        setIsLoading(false);\n      });\n    }\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [visibility ? _jsxs(View, {\n      style: styles.snackBar,\n      children: [_jsx(View, {\n        style: styles.IconContainer,\n        children: _jsx(AntDesign, {\n          name: \"delete\",\n          size: 23,\n          style: {\n            lineHeight: 40\n          },\n          color: \"#ffffff\"\n        })\n      }), _jsx(Text, {\n        style: styles.snack_txt,\n        children: \"Agency was added to the list\"\n      })]\n    }) : _jsx(_Fragment, {}), device_name == \"iOS\" ? _jsxs(View, {\n      style: styles.inputGroupTop,\n      children: [_jsx(Text, {\n        style: styles.labelTop,\n        children: \"Agency name\"\n      }), _jsx(Picker, {\n        selectedValue: picked,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          setPicked(itemValue);\n          setAddCount(true);\n        },\n        children: pickerItems.map(function (v, i) {\n          return _jsx(Picker.Item, {\n            label: v.label,\n            value: v.value\n          }, i);\n        })\n      })]\n    }) : _jsxs(View, {\n      style: styles.inputGroupTop,\n      children: [_jsx(Text, {\n        style: styles.labelTop,\n        children: \"Agency name\"\n      }), _jsx(Picker, {\n        selectedValue: picked,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue, itemIndex) {\n          setPicked(itemValue);\n          setAddCount(true);\n        },\n        children: pickerItems.map(function (v, i) {\n          return _jsx(Picker.Item, {\n            label: v.label,\n            value: v.value\n          }, i);\n        })\n      })]\n    }), showAgencyAdd ? _jsxs(View, {\n      children: [_jsx(View, {\n        style: styles.inputGroup,\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"Add New\"\n          }), _jsx(TextInput, {\n            style: styles.inputtxt,\n            placeholder: 'Agency name',\n            value: agency,\n            onChangeText: function onChangeText(val) {\n              return setAgency(val);\n            }\n          })]\n        })\n      }), _jsx(View, {\n        style: styles.add_main_container,\n        children: _jsxs(TouchableOpacity, {\n          style: styles.container_button,\n          onPress: addAgency,\n          children: [_jsx(View, {\n            style: styles.IconContainer,\n            children: _jsx(Entypo, {\n              name: \"add-to-list\",\n              size: 23,\n              style: {\n                lineHeight: 40\n              },\n              color: \"#60AD7F\"\n            })\n          }), _jsx(Text, {\n            style: styles.add_button_txt,\n            children: \"Add Agency\"\n          })]\n        })\n      })]\n    }) : _jsx(View, {\n      style: styles.add_main_container,\n      children: _jsxs(TouchableOpacity, {\n        style: styles.container_button,\n        onPress: function onPress() {\n          return setShowAgencyAdd(true);\n        },\n        children: [_jsx(View, {\n          style: styles.IconContainer,\n          children: _jsx(AntDesign, {\n            name: \"pluscircleo\",\n            size: 23,\n            style: {\n              lineHeight: 40\n            },\n            color: \"#60AD7F\"\n          })\n        }), _jsx(Text, {\n          style: styles.save_button_txt,\n          children: \"Add Agency in List\"\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.inputGroup,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Brand\"\n      }), _jsx(TextInput, {\n        style: styles.inputtxt,\n        placeholder: 'Brand name',\n        value: brand,\n        onChangeText: function onChangeText(val) {\n          return setBrand(val);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.inputGroup,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Repersentative Name\"\n      }), _jsx(TextInput, {\n        style: styles.inputtxt,\n        placeholder: 'First & last name',\n        value: representative_name,\n        onChangeText: function onChangeText(val) {\n          return setRepresentative_name(val);\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.inputGroup,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Image\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.inputtxt,\n        onPress: pickImage,\n        children: _jsx(Text, {\n          children: \"Pick an image from camera roll\"\n        })\n      })]\n    }), _jsx(ProgressBar, {\n      style: {\n        marginTop: 10,\n        marginBottom: 20,\n        borderRadius: 10,\n        width: \"100%\",\n        height: 15\n      },\n      progress: 0.5,\n      color: \"#7db597\"\n    }), _jsx(View, {\n      style: styles.ImageContainer,\n      children: imageUri ? _jsx(Image, {\n        source: {\n          uri: imageUri\n        },\n        style: {\n          width: \"100%\",\n          height: 200,\n          borderRadius: 10\n        }\n      }) : _jsx(Image, {\n        source: alt,\n        style: {\n          width: \"40%\",\n          height: 300,\n          borderRadius: 10\n        }\n      })\n    }), _jsxs(View, {\n      style: styles.buttons_main_container,\n      children: [_jsxs(TouchableOpacity, {\n        style: styles.container_button,\n        onPress: storeUser,\n        children: [_jsx(View, {\n          style: styles.IconContainer,\n          children: _jsx(Entypo, {\n            name: \"save\",\n            size: 23,\n            style: {\n              lineHeight: 40\n            },\n            color: \"#60AD7F\"\n          })\n        }), _jsx(Text, {\n          style: styles.save_button_txt,\n          children: \"SAVE\"\n        })]\n      }), _jsxs(TouchableOpacity, {\n        style: styles.container_button,\n        onPress: function onPress() {\n          return alert('Delete Button Pressed');\n        },\n        children: [_jsx(View, {\n          style: styles.IconContainer,\n          children: _jsx(AntDesign, {\n            name: \"delete\",\n            size: 23,\n            style: {\n              lineHeight: 40\n            },\n            color: \"#000000\"\n          })\n        }), _jsx(Text, {\n          style: styles.delete_button_txt,\n          children: \"DELETE\"\n        })]\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  ImageContainer: {\n    alignItems: \"center\"\n  },\n  snackBar: {\n    borderWidth: 0.5,\n    borderColor: \"#60AD7F\",\n    backgroundColor: \"#60AD7F\",\n    flexDirection: \"row\",\n    flex: 1,\n    alignItems: \"center\",\n    position: \"absolute\",\n    height: 54,\n    width: \"90%\",\n    zIndex: 2,\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\n    borderRadius: 3.25,\n    left: \"5%\",\n    top: 75\n  },\n  IconContainer: {\n    width: \"10%\",\n    alignItems: \"center\"\n  },\n  container_button: {\n    marginTop: 20,\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\n    justifyContent: \"flex-start\",\n    borderWidth: 1,\n    height: 50,\n    width: \"100%\",\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\n    borderRadius: 4,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  snack_txt: {\n    fontSize: 14,\n    color: \"#ffffff\",\n    width: \"90%\",\n    alignItems: \"left\",\n    textAlign: \"left\",\n    lineHeight: 40,\n    left: 37\n  },\n  delete_button_txt: {\n    fontSize: 14,\n    color: \"#000000\",\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    lineHeight: 40\n  },\n  save_button_txt: {\n    fontSize: 14,\n    color: \"#60AD7F\",\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    lineHeight: 40\n  },\n  add_button_txt: {\n    fontSize: 16,\n    color: \"#60AD7F\",\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    lineHeight: 40\n  },\n  add_main_container: {\n    marginTop: -25,\n    marginBottom: 10\n  },\n  buttons_main_container: {\n    paddingTop: 0\n  },\n  container: {\n    padding: 10,\n    backgroundColor: '#ffffff'\n  },\n  inputtxt: {\n    fontSize: 16,\n    color: \"rgba(0, 0, 0, 0.87);\",\n    paddingTop: 0\n  },\n  labelTop: {\n    fontSize: 12,\n    color: \"#60AD7F\"\n  },\n  label: {\n    fontSize: 12,\n    color: \"rgba(0, 0, 0, 0.38);\"\n  },\n  picker: {\n    width: \"100%\",\n    color: \"black\",\n    zIndex: 1000,\n    marginTop: 4,\n    borderBottomWidth: 1,\n    borderBottomColor: '#65a984',\n    backgroundColor: '#ededed'\n  },\n  label_txt: {\n    fontSize: 16,\n    color: \"rgba(0, 0, 0, 0.87)\"\n  },\n  inputGroup: {\n    flex: 1,\n    height: 56,\n    padding: 10,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#65a984',\n    backgroundColor: '#ededed'\n  },\n  inputGroupTop: {\n    height: 60,\n    padding: 10,\n    marginTop: 30,\n    marginBottom: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: '#65a984',\n    backgroundColor: '#ededed',\n    zIndex: 1\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    alignItems: 'center',\n    color: '#6fa686',\n    backgroundColor: '#ffffff',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#e9e9e9'\n  },\n  buttonInner: {\n    padding: 10\n  }\n});\nexport default AddUserScreen;","map":{"version":3,"sources":["H:/ADTP App current/screens/AddUserScreen.jsx"],"names":["React","useState","useEffect","Entypo","AntDesign","ProgressBar","Colors","Device","alt","ImagePicker","firebase","picker_Items","label","value","AddUserScreen","navigation","isLoading","setIsLoading","pickerItems","setPickerItems","visibility","setVisibility","imageUri","setImageUri","device_name","osName","agency","setAgency","brand","setBrand","representative_name","setRepresentative_name","image","setImage","picked","setPicked","pickedValue","setPickedValue","selected_brand_count","set_selected_brand_count","firestoreData","setFirestoreData","showAgencyAdd","setShowAgencyAdd","addCount","setAddCount","count","i","length","Agency","console","log","styles","preloader","db","firestore","collection","get","then","snapshot","data","forEach","element","push","id","Brand","Representative_name","Image","catch","err","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","uri","addAgency","alert","storeUser","dbRef","add","Count","res","setTimeout","error","container","snackBar","IconContainer","lineHeight","snack_txt","inputGroupTop","labelTop","picker","itemValue","itemIndex","map","v","inputGroup","inputtxt","val","add_main_container","container_button","add_button_txt","save_button_txt","marginTop","marginBottom","borderRadius","width","height","ImageContainer","buttons_main_container","delete_button_txt","StyleSheet","create","alignItems","borderWidth","borderColor","backgroundColor","flexDirection","flex","position","zIndex","shadowColor","shadowRadius","left","top","justifyContent","fontSize","color","textAlign","paddingTop","padding","borderBottomWidth","borderBottomColor","label_txt","right","bottom","button","buttonInner"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  TouchableOpacity,\r\n  Text,\r\n  StyleSheet,\r\n  TextInput,\r\n  ScrollView,\r\n  ActivityIndicator,\r\n  View,\r\n  Button,\r\n  Image,\r\n  Platform\r\n} from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nimport { ProgressBar, Colors } from 'react-native-paper';\r\n\r\n// Importing the react native drop down picker\r\nimport { Picker } from 'react-native'\r\n\r\n//Importing Device API to check the device type to render different content for android and ios\r\nimport * as Device from 'expo-device';\r\n\r\nimport alt from \"../assets/alter.png\";\r\n\r\n//Importing Image Picker \r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nimport \"firebase/storage\";\r\n\r\nimport firebase from '../database/firebaseDb';\r\n\r\nlet picker_Items = [\r\n  {\r\n    label: \"Company 1\",\r\n    value: 1\r\n  },\r\n  {\r\n    label: \"Company 2\",\r\n    value: 2\r\n  },\r\n  {\r\n    label: \"Company 3\",\r\n    value: 3\r\n  },\r\n  {\r\n    label: \"Company 4\",\r\n    value: 4\r\n  },\r\n  {\r\n    label: \"Company 5\",\r\n    value: 5\r\n  },\r\n  {\r\n    label: \"Company 6\",\r\n    value: 6\r\n  },\r\n  {\r\n    label: \"Company 7\",\r\n    value: 7\r\n  },\r\n  {\r\n    label: \"Company 8\",\r\n    value: 8\r\n  },\r\n  {\r\n    label: \"Company 9\",\r\n    value: 9\r\n  },\r\n  {\r\n    label: \"Company 10\",\r\n    value: 10\r\n  }\r\n]\r\n\r\nfunction AddUserScreen({ navigation }) {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [pickerItems, setPickerItems] = useState(picker_Items);\r\n\r\n  const [visibility, setVisibility] = useState(false);\r\n\r\n  const [imageUri, setImageUri] = useState(null);\r\n\r\n\r\n  const device_name = Device.osName;\r\n\r\n  const [agency, setAgency] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [representative_name, setRepresentative_name] = useState('');\r\n  const [image, setImage] = useState('')\r\n\r\n  const [picked, setPicked] = useState(1);\r\n  const [pickedValue, setPickedValue] = useState('');\r\n\r\n  const [selected_brand_count, set_selected_brand_count] = useState(0);\r\n\r\n  //For storing retrieved data\r\n  const [firestoreData, setFirestoreData] = useState([]);\r\n\r\n  //Show Agency Add\r\n  const [showAgencyAdd, setShowAgencyAdd] = useState(false);\r\n  const [addCount, setAddCount] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n    if (pickedValue != '') {\r\n      //For counting the number of times this Company has been choosen its count\r\n      let count = 0;\r\n      for (let i = 0; i < firestoreData.length; i++) {\r\n        if (firestoreData[i].Agency == pickedValue) {\r\n          count = count + 1;\r\n        }\r\n      }\r\n\r\n      //console.log(`The slected agency '${pickedValue}' had appeared \"${count}\" number of times previously`);\r\n      console.log(`The slected agency '${pickedValue}' had appeared \"${count}\" number of times previously`);\r\n      // if (addCount) {\r\n      console.log(\"----------?\" + count)\r\n      set_selected_brand_count(count);\r\n      // setAddCount(false);\r\n      //}\r\n      // setAddCount(false);\r\n      //For counting the number of times this Company has been choosen its count\r\n    }\r\n\r\n    if (isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    for (let i = 0; i < pickerItems.length; i++) {\r\n      if (pickerItems[i].value == picked) {\r\n        //console.log(\"The Picked item label is ==> \", pickerItems[i].label);\r\n        setPickedValue(pickerItems[i].label);\r\n      }\r\n    }\r\n    // console.log(\"Agency name is : \", agency);\r\n    // console.log(\"Picker Items is ==> \", pickerItems);\r\n\r\n    // console.log(\"Data from firestore equals ==> \", firestoreData);\r\n\r\n    //Retrieving the data from firestore for purpose of counter \r\n    if (true) {\r\n      const db = firebase.firestore();\r\n      db.collection(`agencies`)\r\n        .get()\r\n        .then(snapshot => {\r\n          let data = [];\r\n          snapshot.forEach(element => {\r\n            data.push(Object.assign({\r\n              id: element.id,\r\n              \"Agency\": element.Agency,\r\n              \"Brand\": element.Brand,\r\n              \"Representative_name\": element.Representative_name,\r\n              \"Image\": element.Image,\r\n            }, element.data()))\r\n          })\r\n          // console.log(\"data=> \", data)\r\n\r\n          if (firestoreData.length != data.length) {\r\n            setFirestoreData(data);\r\n            // console.log(\"Updated\")\r\n          }\r\n        }).catch(err => {\r\n          console.log(\"Firebase data error ==> \", err)\r\n        })\r\n    }\r\n    //\r\n\r\n  })\r\n\r\n  const pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(\"Result of Image ==> \", result);\r\n\r\n    //For Uploading Images to Cloud Storage\r\n    // Create a root reference\r\n    // var storageRef = firebase.storage().ref();\r\n    // const storageRef = ref(storage, 'some-child');\r\n\r\n    if (!result.cancelled) {\r\n      setImageUri(result.uri);\r\n      // Data URL string\r\n      // const message4 = result.uri;\r\n      // uploadString(storageRef, message4, 'data_url').then((snapshot) => {\r\n      //   console.log('Uploaded a data_url string!',snapshot);\r\n      // });\r\n      // 'file' comes from the Blob or File API\r\n      // storageRef.put(file).then((snapshot) => {\r\n      //   console.log('Uploaded a blob or file!');\r\n      // });\r\n\r\n    }\r\n  };\r\n\r\n  const addAgency = () => {\r\n    if (agency != '') {\r\n      let length = pickerItems.length;\r\n      //console.log(\"Length is \", length, agency);\r\n      // let temp_picker_items = pickerItems;\r\n      // temp_picker_items.push({\r\n      //   label: agency,\r\n      //   value: length\r\n      // })\r\n\r\n      //console.log(\"--===================> \",temp_picker_items)\r\n\r\n      setPickerItems(\r\n        [\r\n          ...pickerItems,\r\n          {\r\n            label: agency,\r\n            value: length + 1\r\n          }\r\n        ]\r\n      );\r\n      setShowAgencyAdd(false);\r\n      alert(\"Agency Added\");\r\n    }\r\n    else {\r\n      alert(\"Please enter an agency name to add it to the list.\");\r\n    }\r\n  }\r\n\r\n  const storeUser = () => {\r\n    if (pickedValue === '' || brand === '' || representative_name === '' || imageUri === '') {\r\n      alert('Fill all the fields!');\r\n    } else {\r\n      setIsLoading(true);\r\n      const dbRef = firebase.firestore().collection('agencies');\r\n      let count = selected_brand_count + 1;\r\n      dbRef.add({\r\n        Agency: pickedValue,\r\n        // Agency: agency,\r\n        Brand: brand,\r\n        Representative_name: representative_name,\r\n        Image: \"imageUri\",\r\n        Count: count\r\n      }).then((res) => {\r\n        // setAgency('');\r\n        setVisibility(true);\r\n        setPickedValue('');\r\n        setBrand('');\r\n        setAgency('');\r\n        setPicked(1);\r\n        setRepresentative_name('');\r\n        set_selected_brand_count(0);\r\n        setIsLoading(false);\r\n        setImageUri('');\r\n        //alert(\"You should now navigate to the listing screen because you've added the item\")\r\n        //props.navigation.navigate('UserScreen')\r\n        //navigate('UserScreen')\r\n        setTimeout(() => { navigation.push('UserScreen'); }, 2000);\r\n        setTimeout(() => { setVisibility(false); }, 4000);\r\n      })\r\n        .catch((err) => {\r\n          console.error(\"Error found: \", err);\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n\r\n      {(visibility) ? (\r\n        <View style={styles.snackBar}>\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#ffffff\" />\r\n          </View>\r\n          <Text style={styles.snack_txt}>Agency was added to the list</Text>\r\n        </View>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      {/* Choose Agency Container */}\r\n      {(device_name == \"iOS\") ? (\r\n        <View style={styles.inputGroupTop}>\r\n          <Text style={styles.labelTop}>Agency name</Text>\r\n          <Picker\r\n            selectedValue={picked}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue, itemIndex) => {\r\n              setPicked(itemValue)\r\n              setAddCount(true)\r\n            }\r\n            }>\r\n            {pickerItems.map((v, i) => {\r\n              return (\r\n                <Picker.Item key={i} label={v.label} value={v.value} />\r\n              )\r\n            })}\r\n          </Picker>\r\n        </View>\r\n      ) : (\r\n        <View style={styles.inputGroupTop}>\r\n\r\n          <Text style={styles.labelTop}>Agency name</Text>\r\n          <Picker\r\n            selectedValue={picked}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue, itemIndex) => {\r\n              setPicked(itemValue)\r\n              setAddCount(true)\r\n              // console.log(\" ): \", itemIndex)\r\n            }\r\n            }>\r\n            {pickerItems.map((v, i) => {\r\n              return (\r\n                <Picker.Item key={i} label={v.label} value={v.value} />\r\n              )\r\n            })}\r\n          </Picker>\r\n        </View>\r\n      )}\r\n      {/* Choose Agency Container */}\r\n\r\n      {\r\n        (showAgencyAdd) ? (\r\n          <View>\r\n            {/* Agency Name Container */}\r\n            < View style={styles.inputGroup}>\r\n              <View>\r\n                <Text style={styles.label}>Add New</Text>\r\n\r\n                <TextInput\r\n                  style={styles.inputtxt}\r\n                  placeholder={'Agency name'}\r\n                  value={agency}\r\n                  onChangeText={(val) => setAgency(val)}\r\n                />\r\n              </View>\r\n            </View>\r\n            {/* Agency Name Container */}\r\n\r\n            {/* ---------------------------Add Button Container--------------------------- */}\r\n            <View style={styles.add_main_container}>\r\n              {/* Add Button Container */}\r\n              <TouchableOpacity\r\n                style={styles.container_button}\r\n                onPress={addAgency}\r\n              >\r\n                <View style={styles.IconContainer}>\r\n                  <Entypo name=\"add-to-list\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n                </View>\r\n                <Text style={styles.add_button_txt}>Add Agency</Text>\r\n              </TouchableOpacity>\r\n              {/* Add Button Container */}\r\n            </View>\r\n            {/* ---------------------------Add Button Container--------------------------- */}\r\n          </View>\r\n        ) : (\r\n          <View style={styles.add_main_container}>\r\n            {/* Add Button Container */}\r\n            <TouchableOpacity\r\n              style={styles.container_button}\r\n              onPress={() => setShowAgencyAdd(true)}\r\n            >\r\n              <View style={styles.IconContainer}>\r\n                <AntDesign name=\"pluscircleo\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n              </View>\r\n              <Text style={styles.save_button_txt}>Add Agency in List</Text>\r\n            </TouchableOpacity>\r\n            {/* Add Button Container */}\r\n          </View>\r\n        )\r\n      }\r\n\r\n\r\n\r\n      {/* Brand Name Container */}\r\n      <View style={styles.inputGroup}>\r\n\r\n        <Text style={styles.label}>Brand</Text>\r\n\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'Brand name'}\r\n          value={brand}\r\n          onChangeText={(val) => setBrand(val)}\r\n        />\r\n      </View>\r\n      {/* Brand Name Container */}\r\n\r\n      {/* Representative Name Container */}\r\n      <View style={styles.inputGroup}>\r\n\r\n        <Text style={styles.label}>Repersentative Name</Text>\r\n\r\n        <TextInput\r\n          style={styles.inputtxt}\r\n          placeholder={'First & last name'}\r\n          value={representative_name}\r\n          onChangeText={(val) => setRepresentative_name(val)}\r\n        />\r\n      </View>\r\n      {/* Representative Name Container */}\r\n\r\n      {/* Image Container */}\r\n      <View style={styles.inputGroup}>\r\n        <Text style={styles.label}>Image</Text>\r\n        <TouchableOpacity style={styles.inputtxt} onPress={pickImage}>\r\n          <Text>Pick an image from camera roll</Text>\r\n        </TouchableOpacity>\r\n\r\n      </View>\r\n      {/* Image Container */}\r\n\r\n      <ProgressBar style={{ marginTop: 10, marginBottom: 20, borderRadius: 10, width: \"100%\", height: 15 }} progress={0.5} color=\"#7db597\" />\r\n\r\n      <View style={styles.ImageContainer}>\r\n        {(imageUri) ?\r\n          (\r\n            <Image source={{ uri: imageUri }} style={{ width: \"100%\", height: 200, borderRadius: 10 }} />\r\n          ) : (\r\n            <Image source={alt} style={{ width: \"40%\", height: 300, borderRadius: 10 }} />\r\n          )\r\n        }\r\n      </View>\r\n\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n      <View style={styles.buttons_main_container}>\r\n        {/* Save Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={storeUser}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <Entypo name=\"save\" size={23} style={{ lineHeight: 40 }} color=\"#60AD7F\" />\r\n          </View>\r\n          <Text style={styles.save_button_txt}>SAVE</Text>\r\n        </TouchableOpacity>\r\n        {/* Save Button Container */}\r\n\r\n        {/* Delete Button Container */}\r\n        <TouchableOpacity\r\n          style={styles.container_button}\r\n          onPress={() => alert('Delete Button Pressed')}\r\n        >\r\n          <View style={styles.IconContainer}>\r\n            <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#000000\" />\r\n          </View>\r\n          <Text style={styles.delete_button_txt}>DELETE</Text>\r\n        </TouchableOpacity>\r\n        {/* Delete Button Container */}\r\n      </View>\r\n      {/* ---------------------------Main Button Container--------------------------- */}\r\n\r\n    </ScrollView >\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  ImageContainer: {\r\n    alignItems: \"center\"\r\n\r\n  },\r\n  snackBar: {\r\n    borderWidth: 0.5,\r\n    borderColor: \"#60AD7F\",\r\n    backgroundColor: \"#60AD7F\",\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    height: 54,\r\n    width: \"90%\",\r\n    zIndex: 2,\r\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\r\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\r\n    borderRadius: 3.25,\r\n    left: \"5%\",\r\n    top: 75,\r\n    // box-shadow: 0px 9.75px 9.75px -7.3125px rgba(32, 32, 32, 0.08);\r\n    // border-radius: 3.25px;\r\n  },\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  container_button: {\r\n    marginTop: 20,\r\n    borderColor: \"rgba(0, 0, 0, 0.12)\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 50,\r\n    width: \"100%\",\r\n    backgroundColor: \"rgba(255, 255, 255, 0.87)\",\r\n    borderRadius: 4,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  snack_txt: {\r\n    fontSize: 14,\r\n    color: \"#ffffff\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    lineHeight: 40,\r\n    left: 37\r\n  },\r\n  delete_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#000000\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  save_button_txt: {\r\n    fontSize: 14,\r\n    color: \"#60AD7F\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  add_button_txt: {\r\n    fontSize: 16,\r\n    color: \"#60AD7F\",\r\n    width: \"90%\",\r\n    //borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    lineHeight: 40\r\n  },\r\n  add_main_container: {\r\n    marginTop: -25,\r\n    marginBottom: 10\r\n  },\r\n  buttons_main_container: {\r\n    paddingTop: 0\r\n  },\r\n  container: {\r\n    padding: 10,\r\n    backgroundColor: '#ffffff'\r\n  },\r\n  inputtxt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87);\",\r\n    paddingTop: 0\r\n  },\r\n  labelTop: {\r\n    fontSize: 12,\r\n    color: \"#60AD7F\"\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n    color: \"rgba(0, 0, 0, 0.38);\"\r\n  },\r\n  picker: {\r\n    width: \"100%\",\r\n    color: \"black\",\r\n    zIndex: 1000,\r\n    marginTop: 4,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n  },\r\n  label_txt: {\r\n    fontSize: 16,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  inputGroup: {\r\n    flex: 1,\r\n    height: 56,\r\n    padding: 10,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n  },\r\n  inputGroupTop: {\r\n    // flex: 1,\r\n    // flexDirection: 'row',\r\n    // justifyContent: \"space-between\",\r\n    height: 60,\r\n    padding: 10,\r\n    marginTop: 30,\r\n    marginBottom: 15,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#65a984',\r\n    backgroundColor: '#ededed',\r\n    zIndex: 1\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    alignItems: 'center',\r\n    color: '#6fa686',\r\n    backgroundColor: '#ffffff',\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#e9e9e9',\r\n  },\r\n  buttonInner: {\r\n    padding: 10,\r\n  },\r\n})\r\n\r\nexport default AddUserScreen;\r\n"]},"metadata":{},"sourceType":"module"}