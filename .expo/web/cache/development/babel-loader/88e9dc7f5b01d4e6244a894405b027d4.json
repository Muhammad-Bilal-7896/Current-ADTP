{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, useEffect, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Entypo } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport firebase from \"../database/firebaseDb\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar UserScreen = function (_Component) {\n  _inherits(UserScreen, _Component);\n\n  var _super = _createSuper(UserScreen);\n\n  function UserScreen() {\n    var _this;\n\n    _classCallCheck(this, UserScreen);\n\n    _this = _super.call(this);\n\n    _this.getCollection = function (querySnapshot) {\n      var userArr = [];\n      querySnapshot.forEach(function (res) {\n        var _res$data = res.data(),\n            Category = _res$data.Category,\n            Agency = _res$data.Agency,\n            Brand = _res$data.Brand,\n            Representative_name = _res$data.Representative_name,\n            Image = _res$data.Image;\n\n        userArr.push({\n          key: res.id,\n          Category: Category,\n          Agency: Agency,\n          Brand: Brand,\n          Representative_name: Representative_name,\n          Image: Image\n        });\n      });\n      console.log(\"User Array is equal to : \", userArr);\n\n      _this.setState({\n        userArr: userArr,\n        isLoading: false\n      });\n    };\n\n    _this.firestoreRef = firebase.firestore().collection('agencies');\n    _this.state = {\n      isLoading: true,\n      userArr: []\n    };\n    return _this;\n  }\n\n  _createClass(UserScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return _jsx(View, {\n          style: styles.preloader,\n          children: _jsx(ActivityIndicator, {\n            size: \"large\",\n            color: \"#9E9E9E\"\n          })\n        });\n      }\n\n      return _jsxs(ScrollView, {\n        style: styles.container,\n        children: [_jsxs(TouchableOpacity, {\n          style: styles.container_monsters,\n          onPress: function onPress() {\n            return alert('Save Button Pressed');\n          },\n          children: [_jsx(Text, {\n            style: styles.heading_txt,\n            children: \"Monsters\"\n          }), _jsx(Ionicons, {\n            name: \"add-circle-sharp\",\n            size: 23,\n            style: {\n              marginLeft: -5,\n              marginTop: 15\n            },\n            color: \"black\"\n          })]\n        }), _jsx(View, {\n          children: _jsx(Text, {\n            style: styles.headingTop,\n            children: \"List of monster \\uD83D\\uDC79\"\n          })\n        }), this.state.userArr.map(function (item, i) {\n          return _jsxs(TouchableOpacity, {\n            style: styles.agency_list_container,\n            children: [_jsxs(View, {\n              children: [_jsx(Text, {\n                style: styles.agency_txt1,\n                children: item.Agency\n              }), _jsx(Text, {\n                style: styles.agency_txt2,\n                children: item.Brand\n              })]\n            }), _jsx(View, {\n              children: _jsx(Text, {\n                style: styles.agency_txt1,\n                children: item.key\n              })\n            })]\n          }, i);\n        })]\n      });\n    }\n  }]);\n\n  return UserScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  agency_list_container: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 10,\n    borderBottomColor: \"\"\n  },\n  agency_txt1: {\n    fontSize: 20,\n    color: \"rgba(0, 0, 0, 0.87)\"\n  },\n  agency_txt2: {\n    paddingTop: 10,\n    fontSize: 14,\n    color: \"rgba(0, 0, 0, 0.87)\"\n  },\n  container: {\n    flex: 1,\n    paddingBottom: 22,\n    backgroundColor: \"#ffffff\"\n  },\n  headingTop: {\n    fontSize: 26,\n    color: \"rgba(0, 0, 0, 0.87)\",\n    paddingTop: 30,\n    padding: 10,\n    paddingBottom: 30\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  container_monsters: {\n    marginTop: 0,\n    borderColor: \"#F5F5F5\",\n    justifyContent: \"flex-start\",\n    borderWidth: 1,\n    height: 56,\n    width: \"100%\",\n    backgroundColor: \"#F5F5F5\",\n    borderRadius: 0,\n    flex: 1,\n    flexDirection: \"row\"\n  },\n  heading_txt: {\n    fontSize: 20,\n    color: \"#212121\",\n    width: \"90%\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    paddingTop: 13,\n    paddingLeft: 22\n  }\n});\nexport default UserScreen;","map":{"version":3,"sources":["H:/ADTP App current/screens/UserScreen.jsx"],"names":["React","useState","useEffect","Component","Entypo","Ionicons","firebase","UserScreen","getCollection","querySnapshot","userArr","forEach","res","data","Category","Agency","Brand","Representative_name","Image","push","key","id","console","log","setState","isLoading","firestoreRef","firestore","collection","state","unsubscribe","onSnapshot","styles","preloader","container","container_monsters","alert","heading_txt","marginLeft","marginTop","headingTop","map","item","i","agency_list_container","agency_txt1","agency_txt2","StyleSheet","create","flex","flexDirection","justifyContent","padding","borderBottomColor","fontSize","color","paddingTop","paddingBottom","backgroundColor","left","right","top","bottom","position","alignItems","borderColor","borderWidth","height","width","borderRadius","textAlign","paddingLeft"],"mappings":"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","sourcesContent":["// screens/UserScreen.js\r\nimport React, { useState, useEffect, Component } from 'react';\r\nimport { StyleSheet, ScrollView, ActivityIndicator, View, TouchableOpacity, Text } from 'react-native';\r\n//Importing the icon family\r\nimport { Entypo } from '@expo/vector-icons';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\n//Importing the icon family\r\nimport firebase from '../database/firebaseDb';\r\n\r\nclass UserScreen extends Component {\r\n  // const [isLoading, setIsLoading] = useState(false);\r\n  // const [userArr, setUserArr] = useState([])\r\n\r\n  constructor() {\r\n    super();\r\n    this.firestoreRef = firebase.firestore().collection('agencies');\r\n    this.state = {\r\n      isLoading: true,\r\n      userArr: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.firestoreRef.onSnapshot(this.getCollection);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unsubscribe();\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   firebase.firestore().collection('agencies').onSnapshot(getCollection);\r\n  //   if (isLoading) {\r\n  //     return (\r\n  //       <View style={styles.preloader}>\r\n  //         <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n  //       </View>\r\n  //     )\r\n  //   }\r\n  // })\r\n\r\n  getCollection = (querySnapshot) => {\r\n    const userArr = [];\r\n    querySnapshot.forEach((res) => {\r\n      const {\r\n        Category,\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image\r\n      } = res.data();\r\n      userArr.push({\r\n        key: res.id,\r\n        Category,\r\n        Agency,\r\n        Brand,\r\n        Representative_name,\r\n        Image\r\n      });\r\n    });\r\n\r\n    console.log(\"User Array is equal to : \", userArr);\r\n    this.setState({\r\n      userArr,\r\n      isLoading: false,\r\n    });\r\n  }\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return (\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n        </View>\r\n      )\r\n    }\r\n    return (\r\n      <ScrollView style={styles.container} >\r\n        {/* Monsters Container */}\r\n        < TouchableOpacity\r\n          style={styles.container_monsters}\r\n          onPress={() => alert('Save Button Pressed')}\r\n        >\r\n          <Text style={styles.heading_txt}>Monsters</Text>\r\n          <Ionicons name=\"add-circle-sharp\" size={23} style={{ marginLeft: -5, marginTop: 15 }} color=\"black\" />\r\n        </TouchableOpacity >\r\n        {/* Monsters Container */}\r\n\r\n        < View>\r\n          <Text style={styles.headingTop}>\r\n            List of monster 👹\r\n          </Text>\r\n        </View>\r\n\r\n        {\r\n          this.state.userArr.map((item, i) => {\r\n            return (\r\n              <TouchableOpacity key={i} style={styles.agency_list_container}>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.Agency}\r\n                  </Text>\r\n                  <Text style={styles.agency_txt2}>\r\n                    {item.Brand}\r\n                  </Text>\r\n                </View>\r\n                <View>\r\n                  <Text style={styles.agency_txt1}>\r\n                    {item.key}\r\n                  </Text>\r\n                </View>\r\n              </TouchableOpacity>\r\n            );\r\n          })\r\n        }\r\n      </ScrollView >\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  agency_list_container: {\r\n    // borderWidth: 1,\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    padding: 10,\r\n    borderBottomColor:\"\"\r\n  },\r\n  agency_txt1: {\r\n    fontSize: 20,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  agency_txt2: {\r\n    paddingTop: 10,\r\n    fontSize: 14,\r\n    color: \"rgba(0, 0, 0, 0.87)\"\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingBottom: 22,\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  headingTop: {\r\n    fontSize: 26,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    // borderWidth:1,\r\n    // borderColor:\"black\",\r\n    paddingTop: 30,\r\n    padding: 10,\r\n    paddingBottom: 30\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  container_monsters: {\r\n    marginTop: 0,\r\n    borderColor: \"#F5F5F5\",\r\n    justifyContent: \"flex-start\",\r\n    borderWidth: 1,\r\n    height: 56,\r\n    width: \"100%\",\r\n    backgroundColor: \"#F5F5F5\",\r\n    borderRadius: 0,\r\n    flex: 1,\r\n    flexDirection: \"row\"\r\n  },\r\n  heading_txt: {\r\n    fontSize: 20,\r\n    color: \"#212121\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop: 13,\r\n    paddingLeft: 22\r\n  },\r\n})\r\n\r\nexport default UserScreen;\r\n"]},"metadata":{},"sourceType":"module"}