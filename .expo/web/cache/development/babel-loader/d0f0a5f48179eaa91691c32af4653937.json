{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Device from 'expo-device';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction Snackbar(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var device_name = Device.osName;\n  return _jsxs(View, {\n    style: styles.snackBar,\n    children: [_jsx(View, {\n      style: styles.IconContainer,\n      children: _jsx(AntDesign, {\n        name: \"delete\",\n        size: 23,\n        style: {\n          lineHeight: 40\n        },\n        color: \"#ffffff\"\n      })\n    }), _jsx(Text, {\n      style: styles.snack_txt,\n      children: \"Agency was added to the list\"\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  snackBar: {\n    borderWidth: 0.5,\n    borderColor: \"#60AD7F\",\n    backgroundColor: \"#60AD7F\",\n    flexDirection: \"row\",\n    flex: 1,\n    alignItems: \"center\",\n    position: \"absolute\",\n    height: 54,\n    width: \"90%\",\n    zIndex: 2,\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\n    borderRadius: 3.25,\n    left: \"5%\",\n    top: 75\n  },\n  IconContainer: {\n    width: \"10%\",\n    alignItems: \"center\"\n  },\n  snack_txt: {\n    fontSize: 14,\n    color: \"#ffffff\",\n    width: \"90%\",\n    alignItems: \"left\",\n    textAlign: \"left\",\n    lineHeight: 40,\n    left: 37\n  }\n});\nexport default Snackbar;","map":{"version":3,"sources":["H:/ADTP App current/components/Snackbar.jsx"],"names":["React","useState","Ionicons","Device","Snackbar","navigation","isLoading","setIsLoading","device_name","osName","styles","snackBar","IconContainer","lineHeight","snack_txt","StyleSheet","create","borderWidth","borderColor","backgroundColor","flexDirection","flex","alignItems","position","height","width","zIndex","shadowColor","shadowRadius","borderRadius","left","top","fontSize","color","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAGA,SAASC,QAAT,QAAyB,oBAAzB;AAGA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;;;;AAGA,SAASC,QAAT,OAAkC;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAEhC,kBAAkCJ,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACM,MAA3B;AAoBA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA,eACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,gBACE,KAAC,SAAD;AAAW,QAAA,IAAI,EAAC,QAAhB;AAAyB,QAAA,IAAI,EAAE,EAA/B;AAAmC,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAA1C;AAA8D,QAAA,KAAK,EAAC;AAApE;AADF,MADF,EAIE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA,MAJF;AAAA,IADJ;AAQD;;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,QAAQ,EAAE;AACRM,IAAAA,WAAW,EAAE,GADL;AAERC,IAAAA,WAAW,EAAE,SAFL;AAGRC,IAAAA,eAAe,EAAE,SAHT;AAIRC,IAAAA,aAAa,EAAE,KAJP;AAKRC,IAAAA,IAAI,EAAC,CALG;AAMRC,IAAAA,UAAU,EAAE,QANJ;AAORC,IAAAA,QAAQ,EAAE,UAPF;AAQRC,IAAAA,MAAM,EAAE,EARA;AASRC,IAAAA,KAAK,EAAE,KATC;AAURC,IAAAA,MAAM,EAAE,CAVA;AAWRC,IAAAA,WAAW,EAAE,wBAXL;AAYRC,IAAAA,YAAY,EAAE,6BAZN;AAaRC,IAAAA,YAAY,EAAE,IAbN;AAcRC,IAAAA,IAAI,EAAE,IAdE;AAeRC,IAAAA,GAAG,EAAE;AAfG,GADqB;AAoB/BnB,EAAAA,aAAa,EAAE;AACba,IAAAA,KAAK,EAAE,KADM;AAGbH,IAAAA,UAAU,EAAE;AAHC,GApBgB;AAyB/BR,EAAAA,SAAS,EAAE;AACTkB,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE,SAFE;AAGTR,IAAAA,KAAK,EAAE,KAHE;AAKTH,IAAAA,UAAU,EAAE,MALH;AAMTY,IAAAA,SAAS,EAAE,MANF;AAOTrB,IAAAA,UAAU,EAAE,EAPH;AAQTiB,IAAAA,IAAI,EAAC;AARI;AAzBoB,CAAlB,CAAf;AAqCA,eAAe1B,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, StyleSheet,View } from 'react-native';\r\n//Importing the icon family\r\nimport { Ionicons } from '@expo/vector-icons'; \r\n\r\n//Importing Device API to check the device type to render different content for android and ios\r\nimport * as Device from 'expo-device';\r\n\r\n\r\nfunction Snackbar({ navigation }) {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const device_name = Device.osName;\r\n\r\n//   const [agency, setAgency] = useState('');\r\n//   const [brand, setBrand] = useState('');\r\n//   const [representative_name, setRepresentative_name] = useState(\"\");\r\n//   const [image, setImage] = useState('')\r\n\r\n//   const [picked, setPicked] = useState(1);\r\n//   const [pickedValue, setPickedValue] = useState(\"\");\r\n\r\n//   useEffect(() => {\r\n//     if (isLoading) {\r\n//       return (\r\n//         <View style={styles.preloader}>\r\n//           <ActivityIndicator size=\"large\" color=\"#9E9E9E\" />\r\n//         </View>\r\n//       )\r\n//     }\r\n//   })\r\n\r\n  return (\r\n      <View style={styles.snackBar}>\r\n        <View style={styles.IconContainer}>\r\n          <AntDesign name=\"delete\" size={23} style={{ lineHeight: 40 }} color=\"#ffffff\" />\r\n        </View>\r\n        <Text style={styles.snack_txt}>Agency was added to the list</Text>\r\n      </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  snackBar: {\r\n    borderWidth: 0.5,\r\n    borderColor: \"#60AD7F\",\r\n    backgroundColor: \"#60AD7F\",\r\n    flexDirection: \"row\",\r\n    flex:1,\r\n    alignItems: \"center\",\r\n    position: \"absolute\",\r\n    height: 54,\r\n    width: \"90%\",\r\n    zIndex: 2,\r\n    shadowColor: \"rgba(32, 32, 32, 0.08)\",\r\n    shadowRadius: \"0px 9.75px 9.75px -7.3125px\",\r\n    borderRadius: 3.25,\r\n    left: \"5%\",\r\n    top: 75,\r\n    // box-shadow: 0px 9.75px 9.75px -7.3125px rgba(32, 32, 32, 0.08);\r\n    // border-radius: 3.25px;\r\n  },\r\n  IconContainer: {\r\n    width: \"10%\",\r\n    //borderWidth: 1,\r\n    alignItems: \"center\"\r\n  },\r\n  snack_txt: {\r\n    fontSize: 14,\r\n    color: \"#ffffff\",\r\n    width: \"90%\",\r\n    // borderWidth:1,\r\n    alignItems: \"left\",\r\n    textAlign: \"left\",\r\n    lineHeight: 40,\r\n    left:37\r\n  }\r\n})\r\n\r\nexport default Snackbar;\r\n"]},"metadata":{},"sourceType":"module"}