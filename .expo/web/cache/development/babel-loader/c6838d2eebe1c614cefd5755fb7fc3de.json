{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ImageUpload() {\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Text, {})\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#ffffff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["H:/ADTP App current/screens/ImageUpload.jsx"],"names":["React","useEffect","ImagePicker","ImageUpload","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAKA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAiClC,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cAII,KAAC,IAAD;AAJJ,IADJ;AAQH;AAED,IAAMD,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Button, StyleSheet, View, Image, Platform } from \"react-native\";\r\n\r\n//Imports\r\n// import * as firebase from \"firebase\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\n\r\nexport default function ImageUpload() {\r\n\r\n    //Copied from expo image picker docs\r\n    // const [image, setImage] = useState(null);\r\n\r\n    // useEffect(() => {\r\n    //     (async () => {\r\n    //         if (Platform.OS != 'web') {\r\n    //             const { status } = await ImagePicker.requestCameraPermissionsAsync();\r\n    //             if (status !== 'granted') {\r\n    //                 alert(\"Sorry, we need camera roll permissions to make this work!\");\r\n    //             }\r\n    //         }\r\n    //     })();\r\n    // }, []);\r\n\r\n    // const pickImage = async () => {\r\n    //     // No permissions request is necessary for launching the image library\r\n    //     let result = await ImagePicker.launchImageLibraryAsync({\r\n    //         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n    //         allowsEditing: true,\r\n    //         aspect: [4, 3],\r\n    //         quality: 1,\r\n    //     });\r\n\r\n    //     console.log(result);\r\n\r\n    //     if (!result.cancelled) {\r\n    //         setImage(result.uri);\r\n    //     }\r\n    // };\r\n    //Copied from expo image picker docs\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* <Image /> */}\r\n            {/* <Button title=\"Choose Picture\" onPress={()=>alert(\"Choose Picture\")} />\r\n            <Button title=\"Upload\" onPress={()=>alert(\"Upload\")} /> */}\r\n            <Text></Text>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: \"#ffffff\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\"\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}